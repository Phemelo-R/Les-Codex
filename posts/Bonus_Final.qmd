---
title: "Hypsometric Map of South Africa"
author: "Phemelo Rutlokoane"
format: html
editor: visual
---

# Load Libraries

library(tidyverse) library(ggpubr) library(scales) library(ggspatial) library(rnaturalearth) library(rnaturalearthdata) library(sf) library(raster) library(elevatr) library(marmap) library(ggrepel) library(rnaturalearthhires) library(ggpattern) library(ggnewscale) library(lwgeom)

sf_use_s2(FALSE)

# South Africa Bounding Box

xmin \<- 14.5 xmax \<- 35.5 ymin \<- -37.5 ymax \<- -22 south_africa_bbox \<- data.frame(x = c(xmin, xmax), y = c(ymin, ymax))

# Load neighboring countries

neighboring_countries \<- ne_countries(scale = "medium", returnclass = "sf") %\>% filter(name %in% c("Namibia", "Botswana", "Zimbabwe", "Mozambique", "Lesotho", "Eswatini"))

# Elevation Data

elevation_data \<- get_elev_raster(locations = south_africa_bbox, z = 5, prj = "+proj=longlat +datum=WGS84") elevation_df \<- as.data.frame(as(elevation_data, "SpatialPixelsDataFrame")) colnames(elevation_df) \<- c("elevation", "x", "y")

# Hypsometric Colors (more vibrant)

hypsometric_colors \<- c("#08306B", "#2171B5", "#6BAED6", "#BDD7E7", "#ffffff", "#f7fcb9", "#d9f0a3", "#addd8e", "#78c679", "#006600", "#996633", "#663300")

# Hillshade

slope \<- terrain(elevation_data, opt = 'slope') aspect \<- terrain(elevation_data, opt = 'aspect') hillshade \<- hillShade(slope, aspect, angle = 45, direction = 315) hillshade_df \<- as.data.frame(as(hillshade, "SpatialPixelsDataFrame")) colnames(hillshade_df) \<- c("hillshade", "x", "y")

# South African Rivers

SA_rivers \<- ne_download(scale = "medium", type = "rivers_lake_centerlines", category = "physical", returnclass = "sf") SA_rivers \<- st_crop(SA_rivers, xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax)

# South African Provinces

SA_Prov \<- ne_states(country = "South Africa", returnclass = "sf")

# South African Capitals

capital_city \<- read.csv("data/south_africa_capitals.csv", stringsAsFactors = FALSE) colnames(capital_city) \<- c("name", "lon", "lat") capital_city \<- capital_city %\>% mutate(lon = as.numeric(lon), lat = as.numeric(lat)) %\>% filter(lon \>= xmin, lon \<= xmax, lat \>= ymin, lat \<= ymax)

# Agulhas and Benguela ----------------------------------------------------

# Define Agulhas Bank and Benguela Upwelling regions (approximate coordinates)

agulhas_bank \<- data.frame( x = c(20, 20, 25, 25, 20), y = c(-37, -34, -34, -37, -37) )

benguela_upwelling \<- data.frame( x = c(14, 14, 18, 18, 14), y = c(-30, -27, -27, -30, -30) )

# Define start and end points for the Agulhas Current (approximate coordinates)

agulhas_current \<- data.frame( x_start = 30, y_start = -33, \# Start point (northeast) x_end = 28, y_end = -35 \# End point (southwest) )

# Define start and end points for the Benguela Current (approximate coordinates)

benguela_current \<- data.frame( x_start = 17, y_start = -33, \# Start point (south) x_end = 15, y_end = -30 \# End point (north) )

# Define mountain ranges and high-relief areas (approximate coordinates)

mountain_ranges \<- data.frame( name = c("Drakensberg", "Cederberg", "Swartberg", "Magaliesberg"), lon = c(29.5, 19.3, 21.5, 27.5), lat = c(-29.5, -32.5, -33.5, -25.5) )

# Mapping -----------------------------------------------------------------

# Plot

ggplot() + \# Hillshade layer geom_raster(data = hillshade_df, aes(x = x, y = y, fill = hillshade)) + scale_fill_gradient(low = "black", high = "white", guide = "none") +

\# Elevation layer (primary fill scale) geom_raster(data = elevation_df, aes(x = x, y = y, fill = elevation), alpha = 0.9) + scale_fill_gradientn( colours = hypsometric_colors, name = "Elevation/Depth (m)", na.value = "transparent", limits = c(-5500, 3500) ) +

\# Add a new fill scale for discrete data (Agulhas Bank and Benguela Upwelling) new_scale_fill() +

\# Agulhas Bank geom_polygon(data = agulhas_bank, aes(x = x, y = y, fill = "Agulhas Bank"), alpha = 0.3, color = "red") +

\# Benguela Upwelling geom_polygon(data = benguela_upwelling, aes(x = x, y = y, fill = "Benguela Upwelling"), alpha = 0.3, color = "blue") +

\# Add fill scale for the polygons (discrete values) scale_fill_manual(name = "Ocean Features", values = c("Agulhas Bank" = "red", "Benguela Upwelling" = "blue")) +

\# Contour lines geom_contour(data = elevation_df, aes(x = x, y = y, z = elevation), color = "black", size = 0.1, bins = 100, alpha = 0.08) +

\# Borders of South Africa borders("world", region = "South Africa", fill = NA, color = "black") +

\# Provincial boundaries geom_sf(data = SA_Prov, fill = NA, color = "black", size = 0.5) +

\# Rivers layer with legend geom_sf(data = SA_rivers, aes(color = "Rivers"), size = 0.7) + scale_color_manual(name = "Land Features", values = c("Rivers" = "blue")) +

\# Add Agulhas Current arrow geom_segment(data = agulhas_current, aes(x = x_start, y = y_start, xend = x_end, yend = y_end), color = "red", linewidth = 1, arrow = arrow(length = unit(0.3, "cm"), type = "closed")) +

\# Add Benguela Current arrow geom_segment(data = benguela_current, aes(x = x_start, y = y_start, xend = x_end, yend = y_end), color = "blue", linewidth = 1, arrow = arrow(length = unit(0.3, "cm"), type = "closed")) +

\# Labels for the currents geom_text(aes(x = 27.5, y = -34, label = "Agulhas Current"), color = "red", size = 3.5, angle = 43, fontface = "bold") + geom_text(aes(x = 15.1, y = -32, label = "Benguela Current"), color = "blue", size = 3.5, angle = 300, fontface = "bold") +

\# Points for mountain ranges geom_point(data = mountain_ranges, aes(x = lon, y = lat, shape = "Major Mountain Ranges"), color = "black", size = 2, stroke = 1, fill = "red2") +

\# Labels for mountain ranges geom_label_repel(data = mountain_ranges, aes(x = lon, y = lat, label = name), color = "black", size = 3, box.padding = 0.5, point.padding = 0.5, min.segment.length = 0.5, segment.color = "gray50", alpha = 0.7, \# Reduce opacity of the boxes fill = "white") + \# Set the background color of the boxes

\# Add shape scale for mountain ranges scale_shape_manual(name = "Legend", values = c("Major Mountain Ranges" = 21)) +

\# Add neighboring countries geom_sf(data = neighboring_countries, fill = NA, color = "black", size = 0.5) +

\# Add neighboring country labels geom_sf_text(data = neighboring_countries, aes(label = name), color = "black", size = 3, fontface = "bold") +

\# Add Indian Ocean and Atlantic Ocean labels annotate("text", label = "Atlantic\nOcean", x = 15.1, y = -35.0, size = 5.0, angle = 30, colour = "black") + annotate("text", label = "Indian\nOcean", x = 32.2, y = -35.2, size = 5.0, angle = 330, colour = "black") +

\# Coordinate system and limits coord_sf(xlim = c(xmin, xmax), ylim = c(ymin, ymax)) +

\# Theme and labels theme_minimal() + labs(title = "Hypsometric Map of South Africa", subtitle = "Elevation data with basins, provinces, rivers, and bathymetry", caption = "Source: elevatr package, rnaturalearth, SANBI\n\nPhemelo Rutlokoane", x = "Longitude", y = "Latitude") + theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), legend.position = "right", axis.title.x = element_text(face = "bold"), \# Make x-axis label bold axis.title.y = element_text(face = "bold")) \# Make y-axis label bold

# Save the plot as a high-resolution PDF

ggsave("south_africa_hypsometric_map.pdf", plot = last_plot(), device = "pdf", width = 16, height = 12, dpi = 300)
