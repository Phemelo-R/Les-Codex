[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Les Codex",
    "section": "",
    "text": "Les Codex is an open, evolving repository of tutorials, notebooks, and conceptual guides for quantitative programming in the sciences. Grounded in structured inference, epistemic clarity, and methodological transparency, this project brings together tools, workflows, and commentary across:\n\nR and the Tidyverse\nPython for data analysis and modelling\nJupyter Notebooks as computational narratives\nBiostatistics, quantitative ecology, and applied statistics\nReproducible research and scientific computing best practices\n\nLes Codex is not just a collection of code, it is a conceptual workspace, a digital codex, documenting and interrogating how we use programming to structure understanding in data-rich environments.\n\n\nThe repository is structured thematically and methodologically, reflecting how statistical thought intersects with code. Each section contains tutorials, commentary, and often datasets or references. Content includes:\n\nR Notebooks: General statistics, GLMs, multivariate methods, and ecological modelling.\nPython Scripts: Pandas, NumPy, matplotlib, scikit-learn, and workflow automation.\nJupyter Narratives: Stepwise modelling, data wrangling, simulation studies, etc.\nBiostatistics: Confidence intervals, power analysis, survival analysis, mixed models.\nField Applications: Sampling design, environmental data, spatiotemporal analysis.\n\nAll material is written with attention to conceptual ordering: code follows argument, not the other way around.\n\n\n\nThis is not a collection of ‚Äútips and tricks.‚Äù It is an attempt to build a living codex of computational practice‚Äîreflecting both the theory that underwrites our models and the pragmatics of their implementation.\nLes Codex privileges clarity over cleverness, rigour over speed, and understanding over mechanical reproduction.\n\n\n\nAt present, this is a personal project. If you‚Äôre aligned with the epistemic and pedagogical goals here and want to contribute, feel free to open a discussion or pull request. Contributions that bring depth, not just breadth, are welcome.\n\n\n\nMIT Licence. All content is freely available for learning, adaptation, and reuse‚Äîwith attribution."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to Les Codex",
    "section": "",
    "text": "Welcome to Les Codex ‚Äî a digital companion for those beginning, refining, or critically engaging with R and machine learning. This site serves as both a structured archive and a dynamic learning space. At its core, it offers a gradual yet rigorous introduction to statistical programming with R, foregrounding practical applications without neglecting conceptual clarity.\nThe content is organised to ease transitions between foundational concepts and advanced topics. Beginners will find scaffolding for essential syntax, data structures, and plotting. As you progress, you‚Äôll encounter materials that draw from quantitative ecology, biostatistics, and machine learning ‚Äî areas that demand both algorithmic precision and epistemic care.\nThis is not a passive repository of tutorials. It is intended to sharpen your sense of inquiry, to cultivate a habit of testing assumptions, and to familiarise you with tools that distinguish signal from noise. You are encouraged to move back and forth between the sections, treat examples as modifiable experiments, and reflect critically on how code interacts with data and method.\n\n\n\n\nLiteracy in R: By engaging with the early modules, you will learn the grammar of R, how to write clean and purposeful code, and how to structure analyses in a reproducible manner.\nAnalytical Thinking: Through exposure to worked examples, simulation models, and applied problems, you‚Äôll build an instinct for structured inference and statistical reasoning.\nPathway to Machine Learning: The later stages of the site introduce supervised and unsupervised learning using tidymodels, with emphasis on interpretability and model evaluation rather than hype.\nScientific Integrity: Beyond technical fluency, the material aims to nurture a disposition attentive to scale, uncertainty, and the philosophical dimensions of modelling.\n\nThis site is maintained as a living document. Contributions, criticisms, and alternative approaches are welcome ‚Äî the goal is not completeness, but clarity and seriousness.\n\nLes Codex is for the reader who values careful work, conceptual grounding, and practical experimentation. It is not a fast track ‚Äî it is a foundation.\n\n\n\nCreated with üíª by Phemelo Rutlokoane"
  },
  {
    "objectID": "index.html#a-hub-for-data-science-and-machine-learning",
    "href": "index.html#a-hub-for-data-science-and-machine-learning",
    "title": "Les Codex",
    "section": "",
    "text": "Les Codex is a growing collection of tutorials, notebooks, and annotated code focused on R, Python, Biostatistics, and Reproducible Data Science. This is the place where you‚Äôll learn the latest techniques in machine learning, statistics, and data analysis, all in a clean, well-documented format."
  },
  {
    "objectID": "index.html#machine-learning-tutorials",
    "href": "index.html#machine-learning-tutorials",
    "title": "Welcome to Les Codex",
    "section": "Machine Learning Tutorials",
    "text": "Machine Learning Tutorials\nDiscover the world of machine learning through practical tutorials and real-life examples. Whether you‚Äôre a beginner or looking to deepen your knowledge, you‚Äôll find insightful content here.\n\nIntroduction to Machine Learning with R\nBuilding Neural Networks in Python\nHands-on with TensorFlow"
  },
  {
    "objectID": "index.html#explore-r-and-python-tutorials",
    "href": "index.html#explore-r-and-python-tutorials",
    "title": "Welcome to Les Codex",
    "section": "Explore R and Python Tutorials",
    "text": "Explore R and Python Tutorials\nGet hands-on with data analysis and machine learning in both R and Python.\n\nR Tutorials\nPython Tutorials\n\n\n\n\nCreated with üíª by Phemelo Rutlokoane"
  },
  {
    "objectID": "index.html#about-les-codex",
    "href": "index.html#about-les-codex",
    "title": "Welcome to Les Codex",
    "section": "",
    "text": "Welcome to Les Codex ‚Äî a digital companion for those beginning, refining, or critically engaging with R and machine learning. This site serves as both a structured archive and a dynamic learning space. At its core, it offers a gradual yet rigorous introduction to statistical programming with R, foregrounding practical applications without neglecting conceptual clarity.\nThe content is organised to ease transitions between foundational concepts and advanced topics. Beginners will find scaffolding for essential syntax, data structures, and plotting. As you progress, you‚Äôll encounter materials that draw from quantitative ecology, biostatistics, and machine learning ‚Äî areas that demand both algorithmic precision and epistemic care.\nThis is not a passive repository of tutorials. It is intended to sharpen your sense of inquiry, to cultivate a habit of testing assumptions, and to familiarise you with tools that distinguish signal from noise. You are encouraged to move back and forth between the sections, treat examples as modifiable experiments, and reflect critically on how code interacts with data and method.\n\n\n\n\nLiteracy in R: By engaging with the early modules, you will learn the grammar of R, how to write clean and purposeful code, and how to structure analyses in a reproducible manner.\nAnalytical Thinking: Through exposure to worked examples, simulation models, and applied problems, you‚Äôll build an instinct for structured inference and statistical reasoning.\nPathway to Machine Learning: The later stages of the site introduce supervised and unsupervised learning using tidymodels, with emphasis on interpretability and model evaluation rather than hype.\nScientific Integrity: Beyond technical fluency, the material aims to nurture a disposition attentive to scale, uncertainty, and the philosophical dimensions of modelling.\n\nThis site is maintained as a living document. Contributions, criticisms, and alternative approaches are welcome ‚Äî the goal is not completeness, but clarity and seriousness.\n\nLes Codex is for the reader who values careful work, conceptual grounding, and practical experimentation. It is not a fast track ‚Äî it is a foundation."
  },
  {
    "objectID": "Introduction to R/index.html",
    "href": "Introduction to R/index.html",
    "title": "Introduction to R",
    "section": "",
    "text": "This section provides an overview of R and RStudio, and directs you to two core subtopics:\n\nR Basics ‚Äî fundamental functions, built-in datasets, and data exploration.\nR Packages ‚Äî installing and using essential data science packages.\n\n\n\nR is a language and environment for statistical computing and graphics. Developed by Ross Ihaka and Robert Gentleman at the University of Auckland, R has grown into an open-source project maintained by the R Core Team. It excels in data manipulation, statistical modelling, and rich visualizations.\n\n\n\nRStudio is an integrated development environment (IDE) for R. Created by JJ Allaire and the RStudio team, it provides a user-friendly interface with syntax highlighting, code completion, and tools for plotting, history, and workspace management.\n\n\n\n\nOpen Source: Free to use and extend.\nCommunity: A vast ecosystem of packages (CRAN, Bioconductor).\nFlexibility: From basic statistics to advanced machine learning and data science.\nReproducibility: Integrates with R Markdown and Quarto for reproducible reports.\n\n\n\n\n\n\n\nDownload R: https://cran.r-project.org/bin/windows/base/\n\nRun the installer and follow the prompts.\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nDownload R: https://cran.r-project.org/bin/macosx/\n\nInstall the .pkg file.\n\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nFollow your distribution‚Äôs instructions: https://cran.r-project.org/bin/linux/\n\nInstall via package manager (e.g., sudo apt install r-base).\n\nDownload and install RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\n\n\n\n\n\n\nRStudio‚Äôs default layout consists of four key panes arranged in a 2x2 grid. You can customise this arrangement via View ‚Üí Panes ‚Üí Pane Layout.\n\nSource Editor (Top-Left)\n\nContains your script or Quarto document.\nFeatures line numbering, syntax highlighting, and code folding (collapse/expand blocks).\nUse Ctrl+Shift+N (Windows/Linux) or Cmd+Shift+N (macOS) to create a new script.\n\nConsole (Bottom-Left)\n\nExecutes R commands interactively.\nShows directly evaluated expressions and error messages.\nYou can run selected code from the Source with Ctrl+Enter or Cmd+Enter.\n\nEnvironment/History (Top-Right)\n\nEnvironment tab lists current objects: variables, data frames, functions.\nHistory tab records all commands you‚Äôve executed in the console.\nClick the broom icon in Environment to clear workspace.\n\nFiles/Plots/Packages/Help/Viewer (Bottom-Right)\n\nFiles: Browse project files; open by double-clicking.\nPlots: Shows generated graphs; use arrows to navigate past plots.\nPackages: Install, update, and load packages with checkboxes.\nHelp: Access documentation for functions and packages; search by term.\nViewer: Renders HTML outputs, such as Quarto previews or shiny apps.\n\n\n\n\n\n\n\nRStudio‚Äôs IDE is highly configurable. Below are step-by-step instructions to tailor the environment for productivity, including how to install GitHub Copilot support.\n\n\n\nPrerequisite: You need RStudio 2023.06.1 or later and a valid GitHub Copilot subscription.\n\nInstall the Extension:\n\nIn RStudio, go to Tools ‚Üí Global Options ‚Üí Visual Studio Code ‚Üí Enable VS Code extensions.\n\nClick Install when prompted; RStudio will download the VS Code extension host.\n\n\nEnable Copilot:\n\nRestart RStudio.\n\nOpen Tools ‚Üí Addins ‚Üí Browse Addins, search for ‚ÄúGitHub Copilot‚Äù, and click Install.\n\nAfter installation, Copilot icons appear in the toolbar.\n\n\nAuthenticate:\n\nClick the Copilot icon (a small airplane) in the top-right of the Source pane.\n\nA dialog opens: click Sign in with GitHub, follow the browser prompts, and authorise Copilot.\n\nBack in RStudio, you should see ‚ÄúCopilot: Enabled‚Äù in the status bar.\n\n\n\nPro tip: Use Alt + \\ (Windows/Linux) or Option + \\ (macOS) to trigger Copilot suggestions inline.\n\n\n\n\n\n\nEditor Theme:\n\nTools ‚Üí Global Options ‚Üí Appearance.\n\nUnder Editor theme, select your preferred dark or light theme (e.g., ‚ÄúTomorrow Night Bright‚Äù or ‚ÄúSolarized Light‚Äù).\n\n\nFont & Size:\n\nIn the same pane, choose a monospaced font (e.g., Consolas, Fira Code) and set size (10‚Äì14 pt).\n\n\nZoom In/Out:\n\nUse Ctrl + / Ctrl ‚Äì (Windows/Linux) or Cmd + / Cmd ‚Äì (macOS) to quickly adjust text size on the fly.\n\n\n\n\n\n\nRStudio lets you rearrange its four panes:\n\nTools ‚Üí Global Options ‚Üí Pane Layout.\n\nChoose one of the presets (e.g., Source/Console | Environment/History | Files/Plots/Packages/Help), or drag-and-drop each pane to your desired quadrant.\n\nShow/Hide Panes:\n\nUse the small X icon on any pane‚Äôs title bar to collapse it.\n\nRestore via View ‚Üí Panes ‚Üí Show [Pane Name].\n\n\n\nShortcut: Shift + Esc hides the current pane.\n\n\n\n\n\n\nCode Snippets:\n\nTools ‚Üí Global Options ‚Üí Code ‚Üí Edit Snippets.\n\nDefine your own shortcuts, e.g.:\nsnippet fun  \n  function(${1:args}) {\\n\\t${0}\\n}  \nTyping fun + Tab expands into the function skeleton.\n\n\nAddins:\n\nInstall packages that supply addins (e.g., datapasta, reprex).\n\nAfter installation, find them under Addins ‚Üí Browse Addins and tick those you use frequently.\n\nYou can also assign keyboard shortcuts via Tools ‚Üí Modify Keyboard Shortcuts.\n\n\n\n\n\n\n\nRun current line: Ctrl + Enter / Cmd + Enter\n\nRun selection / run to next: Ctrl + Alt + R / Cmd + Option + R\n\nFind in file: Ctrl + F / Cmd + F\n\nGo to File/Function: Ctrl + . / Cmd + .\n\nBuild R Package: Ctrl + Shift + B / Cmd + Shift + B\n\nInsert Pipe Operator: Ctrl + Shift + M / Cmd + Shift + M\n\nFor a complete list, open Help ‚Üí Keyboard Shortcuts Help."
  },
  {
    "objectID": "index.html#about-les-codex-1",
    "href": "index.html#about-les-codex-1",
    "title": "Welcome to Les Codex",
    "section": "About Les Codex",
    "text": "About Les Codex\nThis platform is dedicated to bringing clarity and accessibility to the complex world of data science, empowering you with the skills you need to tackle real-world challenges.\n\n\n\nCreated with üíª by Phemelo Rutlokoane"
  },
  {
    "objectID": "index.html#les-codex",
    "href": "index.html#les-codex",
    "title": "Welcome to Les Codex",
    "section": "",
    "text": "Welcome to Les Codex ‚Äî a digital companion for those beginning, refining, or critically engaging with R and machine learning. This site serves as both a structured archive and a dynamic learning space. At its core, it offers a gradual yet rigorous introduction to statistical programming with R, foregrounding practical applications without neglecting conceptual clarity.\nThe content is organised to ease transitions between foundational concepts and advanced topics. Beginners will find scaffolding for essential syntax, data structures, and plotting. As you progress, you‚Äôll encounter materials that draw from quantitative ecology, biostatistics, and machine learning ‚Äî areas that demand both algorithmic precision and epistemic care.\nThis is not a passive repository of tutorials. It is intended to sharpen your sense of inquiry, to cultivate a habit of testing assumptions, and to familiarise you with tools that distinguish signal from noise. You are encouraged to move back and forth between the sections, treat examples as modifiable experiments, and reflect critically on how code interacts with data and method.\n\n\n\n\nLiteracy in R: By engaging with the early modules, you will learn the grammar of R, how to write clean and purposeful code, and how to structure analyses in a reproducible manner.\nAnalytical Thinking: Through exposure to worked examples, simulation models, and applied problems, you‚Äôll build an instinct for structured inference and statistical reasoning.\nPathway to Machine Learning: The later stages of the site introduce supervised and unsupervised learning using tidymodels, with emphasis on interpretability and model evaluation rather than hype.\nScientific Integrity: Beyond technical fluency, the material aims to nurture a disposition attentive to scale, uncertainty, and the philosophical dimensions of modelling.\n\nThis site is maintained as a living document. Contributions, criticisms, and alternative approaches are welcome ‚Äî the goal is not completeness, but clarity and seriousness.\n\nLes Codex is for the reader who values careful work, conceptual grounding, and practical experimentation. It is not a fast track ‚Äî it is a foundation.\n\n\n\nCreated with üíª by Phemelo Rutlokoane"
  },
  {
    "objectID": "Introduction to R/index.html#what-is-r",
    "href": "Introduction to R/index.html#what-is-r",
    "title": "Introduction to R",
    "section": "",
    "text": "R is a language and environment for statistical computing and graphics. Developed by Ross Ihaka and Robert Gentleman at the University of Auckland, R has grown into an open-source project maintained by the R Core Team. It excels in data manipulation, statistical modelling, and rich visualizations."
  },
  {
    "objectID": "Introduction to R/index.html#what-is-rstudio",
    "href": "Introduction to R/index.html#what-is-rstudio",
    "title": "Introduction to R",
    "section": "",
    "text": "RStudio is an integrated development environment (IDE) for R. Created by JJ Allaire and the RStudio team, it provides a user-friendly interface with syntax highlighting, code completion, and tools for plotting, history, and workspace management."
  },
  {
    "objectID": "Introduction to R/index.html#why-use-r",
    "href": "Introduction to R/index.html#why-use-r",
    "title": "Introduction to R",
    "section": "",
    "text": "Open Source: Free to use and extend.\nCommunity: A vast ecosystem of packages (CRAN, Bioconductor).\nFlexibility: From basic statistics to advanced machine learning and data science.\nReproducibility: Integrates with R Markdown and Quarto for reproducible reports."
  },
  {
    "objectID": "Introduction to R/index.html#installation",
    "href": "Introduction to R/index.html#installation",
    "title": "Introduction to R",
    "section": "",
    "text": "Download R: https://cran.r-project.org/bin/windows/base/\n\nRun the installer and follow the prompts.\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nDownload R: https://cran.r-project.org/bin/macosx/\n\nInstall the .pkg file.\n\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nFollow your distribution‚Äôs instructions: https://cran.r-project.org/bin/linux/\n\nInstall via package manager (e.g., sudo apt install r-base).\n\nDownload and install RStudio Desktop: https://posit.co/download/rstudio-desktop/"
  },
  {
    "objectID": "Introduction to R/index.html#getting-started-with-rstudio",
    "href": "Introduction to R/index.html#getting-started-with-rstudio",
    "title": "Introduction to R",
    "section": "",
    "text": "RStudio‚Äôs default layout consists of four key panes arranged in a 2x2 grid. You can customise this arrangement via View ‚Üí Panes ‚Üí Pane Layout.\n\nSource Editor (Top-Left)\n\nContains your script or Quarto document.\nFeatures line numbering, syntax highlighting, and code folding (collapse/expand blocks).\nUse Ctrl+Shift+N (Windows/Linux) or Cmd+Shift+N (macOS) to create a new script.\n\nConsole (Bottom-Left)\n\nExecutes R commands interactively.\nShows directly evaluated expressions and error messages.\nYou can run selected code from the Source with Ctrl+Enter or Cmd+Enter.\n\nEnvironment/History (Top-Right)\n\nEnvironment tab lists current objects: variables, data frames, functions.\nHistory tab records all commands you‚Äôve executed in the console.\nClick the broom icon in Environment to clear workspace.\n\nFiles/Plots/Packages/Help/Viewer (Bottom-Right)\n\nFiles: Browse project files; open by double-clicking.\nPlots: Shows generated graphs; use arrows to navigate past plots.\nPackages: Install, update, and load packages with checkboxes.\nHelp: Access documentation for functions and packages; search by term.\nViewer: Renders HTML outputs, such as Quarto previews or shiny apps."
  },
  {
    "objectID": "Introduction to R/index.html#customising-your-workspace",
    "href": "Introduction to R/index.html#customising-your-workspace",
    "title": "Introduction to R",
    "section": "",
    "text": "Themes: Change editor theme under Tools ‚Üí Global Options ‚Üí Appearance. Options include light (TextMate, Solarized Light) and dark (Cobalt, Monokai).\nPane Layout: Move panes around under View ‚Üí Panes ‚Üí Pane Layout‚Ä¶; drag and swap quadrants.\nCode Completion: Ensure Enable code completion is ticked in Global Options ‚Üí Code ‚Üí Completion.\nAdd-Ons:\n\nGit/GitHub: Integrate under Global Options ‚Üí Git/SVN; enable version control for your project.\nAI Assistants: Use extensions like GitHub Copilot for RMarkdown via Tools ‚Üí Addins."
  },
  {
    "objectID": "Introduction to R/packages.html",
    "href": "Introduction to R/packages.html",
    "title": "Key R Packages",
    "section": "",
    "text": "R‚Äôs power lies in its rich package ecosystem. In this lesson you will learn how to:\n\nInstall and load packages\n\nNavigate the tidyverse meta-package and its components\n\nUse vegan for ecological analyses\n\nExplore several other essential packages\n\nAll examples assume you have installed and loaded the packages as shown below.\n\n\n\n\n# Install core data-science packages from CRAN \ninstall.packages(\"tidyverse\") # includes ggplot2, dplyr, tidyr, readr, purrr, etc. \ninstall.packages(\"vegan\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"sf\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"lubridate\") \ninstall.packages(\"stringr\") \ninstall.packages(\"purrr\")\n\nTip: Run these commands interactively in your console. To avoid mirror prompts, specify repos = \"https://cloud.r-project.org\".\n\n\n\n\n\nUse library(pkg, quietly = TRUE) to suppress startup messages.\nconflicts() shows any function name clashes.\n\n\n\n\n\ntidyverse is a coherent suite by Hadley Wickham & team. It shares a uniform syntax and philosophy:\n\n\nA grammar for data manipulation:\n\nfilter(df, condition)\nselect(df, cols)\nmutate(df, new = expr)\narrange(df, cols)\nsummarise(df, agg = func(col))\n\n\n# Example: summarise mtcars by cyl\ndf &lt;- as_tibble(mtcars)\ndf %&gt;% \n  group_by(cyl) %&gt;%\n  summarise(\n    avg_mpg = mean(mpg),\n    max_hp  = max(hp),\n    n       = n()\n  )\n\n# A tibble: 3 √ó 4\n    cyl avg_mpg max_hp     n\n  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;\n1     4    26.7    113    11\n2     6    19.7    175     7\n3     8    15.1    335    14\n\n\n\n\n\nA layered grammar of graphics:\n\nggplot(data, aes(x, y, ...))\ngeom_point(), geom_line(), geom_histogram()\nlabs(), theme_*()\n\n\nggplot(df, aes(x = factor(cyl), y = mpg)) +\n  geom_col(fill = \"steelblue\") +\n  labs(\n    title = \"MPG by Cylinder Count\",\n    x     = \"Cylinders\",\n    y     = \"MPG\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nTools to tidy data:\n\npivot_longer(df, cols, names_to, values_to)\npivot_wider(df, names_from, values_from)\n\n\n# Convert mtcars summary to long form\nlong_df &lt;- df %&gt;%\n  pivot_longer(\n    cols = c(mpg, hp),\n    names_to  = \"metric\",\n    values_to = \"value\"\n  )\nhead(long_df)\n\n# A tibble: 6 √ó 11\n    cyl  disp  drat    wt  qsec    vs    am  gear  carb metric value\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;\n1     6   160  3.9   2.62  16.5     0     1     4     4 mpg     21  \n2     6   160  3.9   2.62  16.5     0     1     4     4 hp     110  \n3     6   160  3.9   2.88  17.0     0     1     4     4 mpg     21  \n4     6   160  3.9   2.88  17.0     0     1     4     4 hp     110  \n5     4   108  3.85  2.32  18.6     1     1     4     1 mpg     22.8\n6     4   108  3.85  2.32  18.6     1     1     4     1 hp      93  \n\n\n\n\n\nFast data import:\n\nread_csv(\"file.csv\")\nread_delim(\"file.txt\", delim = \"\\t\")\n\n\n# Example: df2 &lt;- read_csv(\"data/mydata.csv\")\n\n\n\n\nFunctional programming:\n\nmap(df, f) applies f to each column\nmap_df(list_of_dfs, bind_rows) combines multiple data frames\n\n\n# Example: compute mean of each numeric column\nmap_dbl(df, ~ if(is.numeric(.x)) mean(.x) else NA_real_)\n\n       mpg        cyl       disp         hp       drat         wt       qsec \n 20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n        vs         am       gear       carb \n  0.437500   0.406250   3.687500   2.812500 \n\n\n\n\n\n\n\nSpecialised for community ecology:\n\ndiversity(x, index = \"shannon\") ‚Äì Shannon diversity index\nmetaMDS(x, distance = \"bray\", k = 2) ‚Äì non-metric MDS ordination\nrda(x, y) ‚Äì redundancy analysis (constrained ordination)\n\n\n# Example using dune dataset\ndata(dune)\ndiv_shannon &lt;- diversity(dune, index = \"shannon\")\nmeta  &lt;- metaMDS(dune, distance = \"bray\", k = 2)\n\nRun 0 stress 0.1192678 \nRun 1 stress 0.1183186 \n... New best solution\n... Procrustes: rmse 0.02027068  max resid 0.0649625 \nRun 2 stress 0.1183186 \n... Procrustes: rmse 3.628051e-05  max resid 0.0001072331 \n... Similar to previous best\nRun 3 stress 0.1183186 \n... Procrustes: rmse 4.962724e-06  max resid 1.437127e-05 \n... Similar to previous best\nRun 4 stress 0.1192678 \nRun 5 stress 0.1192678 \nRun 6 stress 0.1192678 \nRun 7 stress 0.1183186 \n... Procrustes: rmse 1.058477e-05  max resid 3.339494e-05 \n... Similar to previous best\nRun 8 stress 0.1192678 \nRun 9 stress 0.1192678 \nRun 10 stress 0.1812932 \nRun 11 stress 0.2003482 \nRun 12 stress 0.1183186 \n... Procrustes: rmse 2.073742e-06  max resid 6.065277e-06 \n... Similar to previous best\nRun 13 stress 0.1192679 \nRun 14 stress 0.1808911 \nRun 15 stress 0.1183186 \n... Procrustes: rmse 3.75847e-06  max resid 6.208995e-06 \n... Similar to previous best\nRun 16 stress 0.1809577 \nRun 17 stress 0.2045511 \nRun 18 stress 0.1183186 \n... Procrustes: rmse 9.026092e-06  max resid 2.757918e-05 \n... Similar to previous best\nRun 19 stress 0.1192679 \nRun 20 stress 0.1183186 \n... Procrustes: rmse 5.615075e-06  max resid 1.669653e-05 \n... Similar to previous best\n*** Best solution repeated 7 times\n\nplot(meta, type = \"n\"); text(meta, display = \"sites\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHandles spatial vector data:\n\n# sf::st_read(\"path/to/shapefile.shp\")\n\n\n\n\nSimplifies date-time work:\n\nymd(\"2022-01-15\"), hms(\"12:30:45\")\ntoday(), now(), year(), month(), day()\n\n\nd &lt;- ymd(\"2025-05-14\")\nyear(d); month(d); wday(d, label = TRUE)\n\n[1] 2025\n\n\n[1] 5\n\n\n[1] Wed\nLevels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat\n\n\n\n\n\nConsistent string manipulation:\n\nstr_detect(string, pattern)\nstr_replace(string, pattern, replacement)\n\n\nwords &lt;- c(\"data\", \"science\", \"analysis\")\nstr_detect(words, \"a\")    # TRUE, TRUE, FALSE\n\n[1]  TRUE FALSE  TRUE\n\n\n\n\n\n(see above) for advanced iteration.\n\nBy the end of this lesson you should understand the core tidyverse packages, how to manipulate, visualise, and model data, and where to go next for specialised analyses. Proceed to the Error Bypass Atlas or return to Introduction to R."
  },
  {
    "objectID": "Introduction to R/packages.html#installing-packages",
    "href": "Introduction to R/packages.html#installing-packages",
    "title": "Key R Packages",
    "section": "",
    "text": "# Install core data-science packages from CRAN \ninstall.packages(\"tidyverse\") # includes ggplot2, dplyr, tidyr, readr, purrr, etc. \ninstall.packages(\"vegan\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"sf\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"lubridate\") \ninstall.packages(\"stringr\") \ninstall.packages(\"purrr\")\n\nTip: Run these commands interactively in your console. To avoid mirror prompts, specify repos = \"https://cloud.r-project.org\"."
  },
  {
    "objectID": "Introduction to R/packages.html#loading-packages",
    "href": "Introduction to R/packages.html#loading-packages",
    "title": "Key R Packages",
    "section": "",
    "text": "Use library(pkg, quietly = TRUE) to suppress startup messages.\nconflicts() shows any function name clashes."
  },
  {
    "objectID": "Introduction to R/packages.html#essential-package-ecosystems",
    "href": "Introduction to R/packages.html#essential-package-ecosystems",
    "title": "R Packages",
    "section": "",
    "text": "A coherent suite designed for data science by Hadley Wickham and team: - dplyr: Data manipulation grammar (filter(), select(), mutate(), summarise(), arrange()). - ggplot2: Grammar of graphics for plotting. - tidyr: Tools to reshape (pivot_longer, pivot_wider). - readr: High-performance data import (read_csv, read_delim).\n\n\n\n# Import a CSV via readr\n# df &lt;- read_csv(\"path/to/file.csv\")\n\n# Using built-in iris dataset as tibble\ndf &lt;- as_tibble(iris)\n\n# Chain operations with dplyr\ndf_summary &lt;- df %&gt;%\n  filter(Sepal.Length &gt; 5) %&gt;%\n  group_by(Species) %&gt;%\n  summarise(\n    mean_sep = mean(Sepal.Length),\n    sd_sep   = sd(Sepal.Length),\n    count    = n()\n  )\n\n# Display summary\ndf_summary\n\n# A tibble: 3 √ó 4\n  Species    mean_sep sd_sep count\n  &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;\n1 setosa         5.31  0.223    22\n2 versicolor     6.00  0.467    47\n3 virginica      6.62  0.593    49\n\n# Create a scatter plot with ggplot2\nggplot(df, aes(x = Sepal.Length, y = Petal.Length, colour = Species)) +\n  geom_point(alpha = 0.7) +\n  labs(title = \"Sepal vs Petal Length by Species\")\n\n\n\n\n\n\n\n\n\n\n\n\nCommunity ecology and multivariate statistics: - diversity(x, index = \"shannon\"): Shannon diversity index. - metaMDS(x, distance = \"bray\"): Non-metric multidimensional scaling. - rda(x, y): Redundancy analysis (constrained ordination).\n\n\n\n# Load datasets\nlibrary(vegan)\ndata(dune)\ndata(dune.env)\n\n# Calculate Shannon diversity by site\ndiv_shannon &lt;- diversity(dune, index = \"shannon\")\nprint(div_shannon)\n\n       1        2        3        4        5        6        7        8 \n1.440482 2.252516 2.193749 2.426779 2.544421 2.345946 2.471733 2.434898 \n       9       10       11       12       13       14       15       16 \n2.493568 2.398613 2.106065 2.114495 2.099638 1.863680 1.979309 1.959795 \n      17       18       19       20 \n1.876274 2.079387 2.134024 2.048270 \n\n# Perform NMDS ordination\nnmds_res &lt;- metaMDS(dune, distance = \"bray\", k = 2)\n\nRun 0 stress 0.1192678 \nRun 1 stress 0.1192678 \n... Procrustes: rmse 2.760631e-05  max resid 7.918863e-05 \n... Similar to previous best\nRun 2 stress 0.1183186 \n... New best solution\n... Procrustes: rmse 0.02027082  max resid 0.06495998 \nRun 3 stress 0.1886532 \nRun 4 stress 0.1192678 \nRun 5 stress 0.1192678 \nRun 6 stress 0.192224 \nRun 7 stress 0.1192678 \nRun 8 stress 0.1809579 \nRun 9 stress 0.1192678 \nRun 10 stress 0.1192679 \nRun 11 stress 0.1192678 \nRun 12 stress 0.1192678 \nRun 13 stress 0.3770267 \nRun 14 stress 0.1192679 \nRun 15 stress 0.1808911 \nRun 16 stress 0.1183186 \n... Procrustes: rmse 8.295968e-06  max resid 2.447404e-05 \n... Similar to previous best\nRun 17 stress 0.1183186 \n... Procrustes: rmse 7.602898e-06  max resid 2.150183e-05 \n... Similar to previous best\nRun 18 stress 0.1192678 \nRun 19 stress 0.1192678 \nRun 20 stress 0.1812932 \n*** Best solution repeated 2 times\n\nplot(nmds_res, type = \"n\")\ntext(nmds_res, display = \"sites\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nsf: Simple features for spatial vector data. Use st_read() to import spatial files.\nlubridate: Simplifies date-time parsing (ymd(), hms()) and arithmetic.\nstringr: Consistent and user-friendly string manipulation (str_detect, str_replace).\npurrr: Functional programming tools to iterate (map, map_df).\n\n\n\n\n# Install if needed\n# install.packages(\"sf\")\n\nlibrary(sf)\n# Read a shapefile (replace with your own path)\n# shapefile &lt;- st_read(\"data/your_shapefile.shp\")\n# Print geometry summary\n# print(shapefile)"
  },
  {
    "objectID": "Introduction to R/r-basics.html",
    "href": "Introduction to R/r-basics.html",
    "title": "R Basics",
    "section": "",
    "text": "Welcome to your first R session. In this lesson you will learn how to:\n\nCreate and assign objects\nIdentify and inspect R‚Äôs basic data types\nCompute descriptive statistics\nExplore and summarise built-in datasets\nView data in RStudio\nGenerate sequences and subset using logical operations\n\nAll functions and data here are part of base R‚Äîno extra packages required.\n\n\n\nEverything in R is an object (vectors, matrices, functions, etc.). To create or update an object, use the assignment operator &lt;-:\n\n# Create a numeric vector named x \nx &lt;- c(5, 3, 9, 2, 7) \n# Create another object y \ny = 1:10   \n\n\n= also works, but &lt;- is preferred idiomatically\nTyping x in the Console then Enter will print its contents.\nUse rm(x) to remove an object.\n\n\n\n\n\nR‚Äôs core data structures include:\n\n\n\n\n\n\n\n\n\nType\nDescription\nExample\nInspect with\n\n\n\n\nVector\n1D ordered collection of elements of the same type\nc(1,2,3)\nclass(x), str(x)\n\n\nMatrix\n2D array (rows√ócolumns)\nmatrix(1:6, nrow=2)\ndim(m), class(m)\n\n\nList\nOrdered collection of elements of any type\nlist(1, \"a\", TRUE)\nstr(l), names(l)\n\n\nData frame\nTable with columns of potentially differing types\ndata.frame(a=1:3, b=c(\"x\",\"y\",\"z\"))\nhead(df), str(df)\n\n\n\n\n\n\n\nGiven a numeric vector, R provides core summary functions:\nFunction behaviors\n\nmean(x): sum(x)/length(x)\nsd(x): ‚àövariance(x)\nquantile(x): named vector of percentiles\nsummary(x): prints Min, 1st Qu., Median, Mean, 3rd Qu., Max\n\nUse ?mean or help(\"quantile\") for details.\n\n\n\n\nR includes numerous datasets for practice:\n\n\n\n\n\n\n\n\nDataset\nDescription\nDimensions\n\n\n\n\niris\nFlower measurements by species\n150 √ó 5\n\n\nmtcars\nCar specs (mpg, hp, wt, etc.)\n32 √ó 11\n\n\nairquality\nNY air pollution (Ozone, Solar.R, Wind)\n153 √ó 6\n\n\nCO2\nCO‚ÇÇ uptake in plants under treatments\n84 √ó 5\n\n\nPlantGrowth\nPlant weights under different treatments\n30 √ó 2\n\n\n\nLoad other datasets similarly: data(mtcars), then inspect.\n\n\n\n\n\nConsole: execute commands interactively.\nSource: script editor‚Äîwrite code and send to Console with Ctrl+Enter (Win/Linux) or Cmd+Enter (macOS).\nEnvironment: lists current objects‚Äîclick to view.\nFiles/Plots/Packages/Help: navigate files, inspect plots, manage packages, read documentation.\n\nKey inspector functions:\n\n\n\n\nCreate predictable sequences:\n\n1:5                # 1,2,3,4,5\n\n[1] 1 2 3 4 5\n\nseq(0, 1, by=0.2)  # 0.0,0.2,...,1.0\n\n[1] 0.0 0.2 0.4 0.6 0.8 1.0\n\nrep(\"A\", times=3)  # \"A\",\"A\",\"A\"\n\n[1] \"A\" \"A\" \"A\"\n\n\n\n\n\n\nLogical tests return TRUE/FALSE:\n\nx &lt;- c(3, 6, 9, 2)\nx &gt; 5            # FALSE, TRUE, TRUE, FALSE\n\n[1] FALSE  TRUE  TRUE FALSE\n\nx == 6           # FALSE, TRUE, FALSE, FALSE\n\n[1] FALSE  TRUE FALSE FALSE\n\n\n\n\nCombine conditions:\n\nx[x &gt; 2 & x &lt; 8] # AND\n\n[1] 3 6\n\nx[x == 3 | x == 9] # OR\n\n[1] 3 9\n\n\n\n\n\n\nTo summarise all columns in a data frame:\nFor more granular control, later we‚Äôll use dplyr::summarise() on grouped data.\n\nCongratulations‚Äîthese are the essential tools of base R. Next, explore Key Packages to extend your capabilities beyond the base installation."
  },
  {
    "objectID": "Introduction to R/r-basics.html#computing-descriptive-statistics",
    "href": "Introduction to R/r-basics.html#computing-descriptive-statistics",
    "title": "R Basics",
    "section": "",
    "text": "Base R provides the following core functions without loading any extra packages:\n\n# Sample numeric vector\ndata_vec &lt;- c(8.2, 5.4, 9.7, 6.1, 7.3, 8.9)\n\n# Compute descriptive statistics\nmean_val   &lt;- mean(data_vec)      # arithmetic mean\nsd_val     &lt;- sd(data_vec)        # standard deviation\nmedian_val &lt;- median(data_vec)    # median\nvar_val    &lt;- var(data_vec)       # variance\nquants     &lt;- quantile(data_vec, probs = c(0.25, 0.5, 0.75))  # quartiles\nrange_val  &lt;- range(data_vec)     # min and max\n\n# Display results\nmean_val\n\n[1] 7.6\n\nsd_val\n\n[1] 1.651666\n\nmedian_val\n\n[1] 7.75\n\nvar_val\n\n[1] 2.728\n\nquants\n\n  25%   50%   75% \n6.400 7.750 8.725 \n\nrange_val\n\n[1] 5.4 9.7\n\n\n\n\n\nmean(x): average of the elements in x.\nsd(x): sample standard deviation (denominator n‚àí1).\nmedian(x): middle value of sorted x.\nvar(x): sample variance.\nquantile(x, probs): specified percentiles of x.\nrange(x): minimum and maximum values of x.\n\nUse ?function_name (e.g., ?mean) in the console to view documentation."
  },
  {
    "objectID": "Introduction to R/r-basics.html#built-in-datasets-in-r",
    "href": "Introduction to R/r-basics.html#built-in-datasets-in-r",
    "title": "R Basics",
    "section": "",
    "text": "R comes with many datasets. List them all with:\n\n# Show available datasets\ndata()\n\nBelow are commonly used examples:\n\n# Inspect iris dataset\ndata(iris)\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\nsummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n\nstr(iris)\n\n'data.frame':   150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n\n\n\n\n\n\n\nDataset\nDescription\nDimensions\n\n\n\n\niris\nEdgar Anderson‚Äôs measurements of iris flowers\n150 √ó 5\n\n\nmtcars\nMotor Trend car specifications and fuel consumption\n32 √ó 11\n\n\nairquality\nDaily air quality measurements in New York (1973)\n153 √ó 6\n\n\nCO2\nCarbon dioxide uptake in grass plants under different conditions\n84 √ó 5\n\n\nPlantGrowth\nResults of an experiment on plant weight under control and treat.\n30 √ó 2"
  },
  {
    "objectID": "Introduction to R/r-basics.html#viewing-data-in-rstudio",
    "href": "Introduction to R/r-basics.html#viewing-data-in-rstudio",
    "title": "R Basics",
    "section": "",
    "text": "View( ): In the console or script, run:\n\nView(iris)\n\nThis opens a spreadsheet-like viewer.\nEnvironment Pane: Under the Environment tab, click a dataset name to inspect it interactively. Use the gear icon ‚öôÔ∏è to show/hide columns.\n\nAlways check dimensions (dim(x)), variable names (names(x)), and types (class(x) / typeof(x)) before proceeding."
  },
  {
    "objectID": "about.html#what-youll-find-here",
    "href": "about.html#what-youll-find-here",
    "title": "About Les Codex",
    "section": "",
    "text": "The repository is structured thematically and methodologically, reflecting how statistical thought intersects with code. Each section contains tutorials, commentary, and often datasets or references. Content includes:\n\nR Notebooks: General statistics, GLMs, multivariate methods, and ecological modelling.\nPython Scripts: Pandas, NumPy, matplotlib, scikit-learn, and workflow automation.\nJupyter Narratives: Stepwise modelling, data wrangling, simulation studies, etc.\nBiostatistics: Confidence intervals, power analysis, survival analysis, mixed models.\nField Applications: Sampling design, environmental data, spatiotemporal analysis.\n\nAll material is written with attention to conceptual ordering: code follows argument, not the other way around."
  },
  {
    "objectID": "about.html#philosophy",
    "href": "about.html#philosophy",
    "title": "About Les Codex",
    "section": "",
    "text": "This is not a collection of ‚Äútips and tricks.‚Äù It is an attempt to build a living codex of computational practice‚Äîreflecting both the theory that underwrites our models and the pragmatics of their implementation.\nLes Codex privileges clarity over cleverness, rigour over speed, and understanding over mechanical reproduction."
  },
  {
    "objectID": "about.html#contributions",
    "href": "about.html#contributions",
    "title": "About Les Codex",
    "section": "",
    "text": "At present, this is a personal project. If you‚Äôre aligned with the epistemic and pedagogical goals here and want to contribute, feel free to open a discussion or pull request. Contributions that bring depth, not just breadth, are welcome."
  },
  {
    "objectID": "about.html#licence",
    "href": "about.html#licence",
    "title": "About Les Codex",
    "section": "",
    "text": "MIT Licence. All content is freely available for learning, adaptation, and reuse‚Äîwith attribution."
  },
  {
    "objectID": "Introduction to R/index.html#customising-your-rstudio-workspace",
    "href": "Introduction to R/index.html#customising-your-rstudio-workspace",
    "title": "Introduction to R",
    "section": "",
    "text": "RStudio‚Äôs IDE is highly configurable. Below are step-by-step instructions to tailor the environment for productivity, including how to install GitHub Copilot support.\n\n\n\nPrerequisite: You need RStudio 2023.06.1 or later and a valid GitHub Copilot subscription.\n\nInstall the Extension:\n\nIn RStudio, go to Tools ‚Üí Global Options ‚Üí Visual Studio Code ‚Üí Enable VS Code extensions.\n\nClick Install when prompted; RStudio will download the VS Code extension host.\n\n\nEnable Copilot:\n\nRestart RStudio.\n\nOpen Tools ‚Üí Addins ‚Üí Browse Addins, search for ‚ÄúGitHub Copilot‚Äù, and click Install.\n\nAfter installation, Copilot icons appear in the toolbar.\n\n\nAuthenticate:\n\nClick the Copilot icon (a small airplane) in the top-right of the Source pane.\n\nA dialog opens: click Sign in with GitHub, follow the browser prompts, and authorise Copilot.\n\nBack in RStudio, you should see ‚ÄúCopilot: Enabled‚Äù in the status bar.\n\n\n\nPro tip: Use Alt + \\ (Windows/Linux) or Option + \\ (macOS) to trigger Copilot suggestions inline.\n\n\n\n\n\n\nEditor Theme:\n\nTools ‚Üí Global Options ‚Üí Appearance.\n\nUnder Editor theme, select your preferred dark or light theme (e.g., ‚ÄúTomorrow Night Bright‚Äù or ‚ÄúSolarized Light‚Äù).\n\n\nFont & Size:\n\nIn the same pane, choose a monospaced font (e.g., Consolas, Fira Code) and set size (10‚Äì14 pt).\n\n\nZoom In/Out:\n\nUse Ctrl + / Ctrl ‚Äì (Windows/Linux) or Cmd + / Cmd ‚Äì (macOS) to quickly adjust text size on the fly.\n\n\n\n\n\n\nRStudio lets you rearrange its four panes:\n\nTools ‚Üí Global Options ‚Üí Pane Layout.\n\nChoose one of the presets (e.g., Source/Console | Environment/History | Files/Plots/Packages/Help), or drag-and-drop each pane to your desired quadrant.\n\nShow/Hide Panes:\n\nUse the small X icon on any pane‚Äôs title bar to collapse it.\n\nRestore via View ‚Üí Panes ‚Üí Show [Pane Name].\n\n\n\nShortcut: Shift + Esc hides the current pane.\n\n\n\n\n\n\nCode Snippets:\n\nTools ‚Üí Global Options ‚Üí Code ‚Üí Edit Snippets.\n\nDefine your own shortcuts, e.g.:\nsnippet fun  \n  function(${1:args}) {\\n\\t${0}\\n}  \nTyping fun + Tab expands into the function skeleton.\n\n\nAddins:\n\nInstall packages that supply addins (e.g., datapasta, reprex).\n\nAfter installation, find them under Addins ‚Üí Browse Addins and tick those you use frequently.\n\nYou can also assign keyboard shortcuts via Tools ‚Üí Modify Keyboard Shortcuts.\n\n\n\n\n\n\n\nRun current line: Ctrl + Enter / Cmd + Enter\n\nRun selection / run to next: Ctrl + Alt + R / Cmd + Option + R\n\nFind in file: Ctrl + F / Cmd + F\n\nGo to File/Function: Ctrl + . / Cmd + .\n\nBuild R Package: Ctrl + Shift + B / Cmd + Shift + B\n\nInsert Pipe Operator: Ctrl + Shift + M / Cmd + Shift + M\n\nFor a complete list, open Help ‚Üí Keyboard Shortcuts Help."
  },
  {
    "objectID": "Introduction to R/r-basics.html#objects-and-assignment",
    "href": "Introduction to R/r-basics.html#objects-and-assignment",
    "title": "R Basics",
    "section": "",
    "text": "Everything in R is an object (vectors, matrices, functions, etc.). To create or update an object, use the assignment operator &lt;-:\n\n# Create a numeric vector named x \nx &lt;- c(5, 3, 9, 2, 7) \n# Create another object y \ny = 1:10   \n\n\n= also works, but &lt;- is preferred idiomatically\nTyping x in the Console then Enter will print its contents.\nUse rm(x) to remove an object."
  },
  {
    "objectID": "Introduction to R/r-basics.html#base-data-types",
    "href": "Introduction to R/r-basics.html#base-data-types",
    "title": "R Basics",
    "section": "",
    "text": "R‚Äôs core data structures include:\n\n\n\n\n\n\n\n\n\nType\nDescription\nExample\nInspect with\n\n\n\n\nVector\n1D ordered collection of elements of the same type\nc(1,2,3)\nclass(x), str(x)\n\n\nMatrix\n2D array (rows√ócolumns)\nmatrix(1:6, nrow=2)\ndim(m), class(m)\n\n\nList\nOrdered collection of elements of any type\nlist(1, \"a\", TRUE)\nstr(l), names(l)\n\n\nData frame\nTable with columns of potentially differing types\ndata.frame(a=1:3, b=c(\"x\",\"y\",\"z\"))\nhead(df), str(df)"
  },
  {
    "objectID": "Introduction to R/r-basics.html#descriptive-statistics",
    "href": "Introduction to R/r-basics.html#descriptive-statistics",
    "title": "R Basics",
    "section": "",
    "text": "Given a numeric vector, R provides core summary functions:\nFunction behaviors\n\nmean(x): sum(x)/length(x)\nsd(x): ‚àövariance(x)\nquantile(x): named vector of percentiles\nsummary(x): prints Min, 1st Qu., Median, Mean, 3rd Qu., Max\n\nUse ?mean or help(\"quantile\") for details."
  },
  {
    "objectID": "Introduction to R/r-basics.html#built-in-datasets",
    "href": "Introduction to R/r-basics.html#built-in-datasets",
    "title": "R Basics",
    "section": "",
    "text": "R includes numerous datasets for practice:\n\n\n\n\n\n\n\n\nDataset\nDescription\nDimensions\n\n\n\n\niris\nFlower measurements by species\n150 √ó 5\n\n\nmtcars\nCar specs (mpg, hp, wt, etc.)\n32 √ó 11\n\n\nairquality\nNY air pollution (Ozone, Solar.R, Wind)\n153 √ó 6\n\n\nCO2\nCO‚ÇÇ uptake in plants under treatments\n84 √ó 5\n\n\nPlantGrowth\nPlant weights under different treatments\n30 √ó 2\n\n\n\nLoad other datasets similarly: data(mtcars), then inspect."
  },
  {
    "objectID": "Introduction to R/r-basics.html#viewing-and-inspecting-data-in-rstudio",
    "href": "Introduction to R/r-basics.html#viewing-and-inspecting-data-in-rstudio",
    "title": "R Basics",
    "section": "",
    "text": "Console: execute commands interactively.\nSource: script editor‚Äîwrite code and send to Console with Ctrl+Enter (Win/Linux) or Cmd+Enter (macOS).\nEnvironment: lists current objects‚Äîclick to view.\nFiles/Plots/Packages/Help: navigate files, inspect plots, manage packages, read documentation.\n\nKey inspector functions:"
  },
  {
    "objectID": "Introduction to R/r-basics.html#sequences-and-repetitions",
    "href": "Introduction to R/r-basics.html#sequences-and-repetitions",
    "title": "R Basics",
    "section": "",
    "text": "Create predictable sequences:\n\n1:5                # 1,2,3,4,5\n\n[1] 1 2 3 4 5\n\nseq(0, 1, by=0.2)  # 0.0,0.2,...,1.0\n\n[1] 0.0 0.2 0.4 0.6 0.8 1.0\n\nrep(\"A\", times=3)  # \"A\",\"A\",\"A\"\n\n[1] \"A\" \"A\" \"A\""
  },
  {
    "objectID": "Introduction to R/r-basics.html#logical-operations-and-subsetting",
    "href": "Introduction to R/r-basics.html#logical-operations-and-subsetting",
    "title": "R Basics",
    "section": "",
    "text": "Logical tests return TRUE/FALSE:\n\nx &lt;- c(3, 6, 9, 2)\nx &gt; 5            # FALSE, TRUE, TRUE, FALSE\n\n[1] FALSE  TRUE  TRUE FALSE\n\nx == 6           # FALSE, TRUE, FALSE, FALSE\n\n[1] FALSE  TRUE FALSE FALSE\n\n\n\n\nCombine conditions:\n\nx[x &gt; 2 & x &lt; 8] # AND\n\n[1] 3 6\n\nx[x == 3 | x == 9] # OR\n\n[1] 3 9"
  },
  {
    "objectID": "Introduction to R/r-basics.html#summarising-a-data-frame",
    "href": "Introduction to R/r-basics.html#summarising-a-data-frame",
    "title": "R Basics",
    "section": "",
    "text": "To summarise all columns in a data frame:\nFor more granular control, later we‚Äôll use dplyr::summarise() on grouped data.\n\nCongratulations‚Äîthese are the essential tools of base R. Next, explore Key Packages to extend your capabilities beyond the base installation."
  },
  {
    "objectID": "Introduction to R/packages.html#the-tidyverse-ecosystem",
    "href": "Introduction to R/packages.html#the-tidyverse-ecosystem",
    "title": "Key R Packages",
    "section": "",
    "text": "tidyverse is a coherent suite by Hadley Wickham & team. It shares a uniform syntax and philosophy:\n\n\nA grammar for data manipulation:\n\nfilter(df, condition)\nselect(df, cols)\nmutate(df, new = expr)\narrange(df, cols)\nsummarise(df, agg = func(col))\n\n\n# Example: summarise mtcars by cyl\ndf &lt;- as_tibble(mtcars)\ndf %&gt;% \n  group_by(cyl) %&gt;%\n  summarise(\n    avg_mpg = mean(mpg),\n    max_hp  = max(hp),\n    n       = n()\n  )\n\n# A tibble: 3 √ó 4\n    cyl avg_mpg max_hp     n\n  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;\n1     4    26.7    113    11\n2     6    19.7    175     7\n3     8    15.1    335    14\n\n\n\n\n\nA layered grammar of graphics:\n\nggplot(data, aes(x, y, ...))\ngeom_point(), geom_line(), geom_histogram()\nlabs(), theme_*()\n\n\nggplot(df, aes(x = factor(cyl), y = mpg)) +\n  geom_col(fill = \"steelblue\") +\n  labs(\n    title = \"MPG by Cylinder Count\",\n    x     = \"Cylinders\",\n    y     = \"MPG\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nTools to tidy data:\n\npivot_longer(df, cols, names_to, values_to)\npivot_wider(df, names_from, values_from)\n\n\n# Convert mtcars summary to long form\nlong_df &lt;- df %&gt;%\n  pivot_longer(\n    cols = c(mpg, hp),\n    names_to  = \"metric\",\n    values_to = \"value\"\n  )\nhead(long_df)\n\n# A tibble: 6 √ó 11\n    cyl  disp  drat    wt  qsec    vs    am  gear  carb metric value\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;\n1     6   160  3.9   2.62  16.5     0     1     4     4 mpg     21  \n2     6   160  3.9   2.62  16.5     0     1     4     4 hp     110  \n3     6   160  3.9   2.88  17.0     0     1     4     4 mpg     21  \n4     6   160  3.9   2.88  17.0     0     1     4     4 hp     110  \n5     4   108  3.85  2.32  18.6     1     1     4     1 mpg     22.8\n6     4   108  3.85  2.32  18.6     1     1     4     1 hp      93  \n\n\n\n\n\nFast data import:\n\nread_csv(\"file.csv\")\nread_delim(\"file.txt\", delim = \"\\t\")\n\n\n# Example: df2 &lt;- read_csv(\"data/mydata.csv\")\n\n\n\n\nFunctional programming:\n\nmap(df, f) applies f to each column\nmap_df(list_of_dfs, bind_rows) combines multiple data frames\n\n\n# Example: compute mean of each numeric column\nmap_dbl(df, ~ if(is.numeric(.x)) mean(.x) else NA_real_)\n\n       mpg        cyl       disp         hp       drat         wt       qsec \n 20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n        vs         am       gear       carb \n  0.437500   0.406250   3.687500   2.812500"
  },
  {
    "objectID": "Introduction to R/packages.html#the-vegan-package",
    "href": "Introduction to R/packages.html#the-vegan-package",
    "title": "Key R Packages",
    "section": "",
    "text": "Specialised for community ecology:\n\ndiversity(x, index = \"shannon\") ‚Äì Shannon diversity index\nmetaMDS(x, distance = \"bray\", k = 2) ‚Äì non-metric MDS ordination\nrda(x, y) ‚Äì redundancy analysis (constrained ordination)\n\n\n# Example using dune dataset\ndata(dune)\ndiv_shannon &lt;- diversity(dune, index = \"shannon\")\nmeta  &lt;- metaMDS(dune, distance = \"bray\", k = 2)\n\nRun 0 stress 0.1192678 \nRun 1 stress 0.1183186 \n... New best solution\n... Procrustes: rmse 0.02027068  max resid 0.0649625 \nRun 2 stress 0.1183186 \n... Procrustes: rmse 3.628051e-05  max resid 0.0001072331 \n... Similar to previous best\nRun 3 stress 0.1183186 \n... Procrustes: rmse 4.962724e-06  max resid 1.437127e-05 \n... Similar to previous best\nRun 4 stress 0.1192678 \nRun 5 stress 0.1192678 \nRun 6 stress 0.1192678 \nRun 7 stress 0.1183186 \n... Procrustes: rmse 1.058477e-05  max resid 3.339494e-05 \n... Similar to previous best\nRun 8 stress 0.1192678 \nRun 9 stress 0.1192678 \nRun 10 stress 0.1812932 \nRun 11 stress 0.2003482 \nRun 12 stress 0.1183186 \n... Procrustes: rmse 2.073742e-06  max resid 6.065277e-06 \n... Similar to previous best\nRun 13 stress 0.1192679 \nRun 14 stress 0.1808911 \nRun 15 stress 0.1183186 \n... Procrustes: rmse 3.75847e-06  max resid 6.208995e-06 \n... Similar to previous best\nRun 16 stress 0.1809577 \nRun 17 stress 0.2045511 \nRun 18 stress 0.1183186 \n... Procrustes: rmse 9.026092e-06  max resid 2.757918e-05 \n... Similar to previous best\nRun 19 stress 0.1192679 \nRun 20 stress 0.1183186 \n... Procrustes: rmse 5.615075e-06  max resid 1.669653e-05 \n... Similar to previous best\n*** Best solution repeated 7 times\n\nplot(meta, type = \"n\"); text(meta, display = \"sites\")"
  },
  {
    "objectID": "Introduction to R/packages.html#other-essential-packages",
    "href": "Introduction to R/packages.html#other-essential-packages",
    "title": "Key R Packages",
    "section": "",
    "text": "Handles spatial vector data:\n\n# sf::st_read(\"path/to/shapefile.shp\")\n\n\n\n\nSimplifies date-time work:\n\nymd(\"2022-01-15\"), hms(\"12:30:45\")\ntoday(), now(), year(), month(), day()\n\n\nd &lt;- ymd(\"2025-05-14\")\nyear(d); month(d); wday(d, label = TRUE)\n\n[1] 2025\n\n\n[1] 5\n\n\n[1] Wed\nLevels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat\n\n\n\n\n\nConsistent string manipulation:\n\nstr_detect(string, pattern)\nstr_replace(string, pattern, replacement)\n\n\nwords &lt;- c(\"data\", \"science\", \"analysis\")\nstr_detect(words, \"a\")    # TRUE, TRUE, FALSE\n\n[1]  TRUE FALSE  TRUE\n\n\n\n\n\n(see above) for advanced iteration.\n\nBy the end of this lesson you should understand the core tidyverse packages, how to manipulate, visualise, and model data, and where to go next for specialised analyses. Proceed to the Error Bypass Atlas or return to Introduction to R."
  }
]