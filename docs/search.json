[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Les Codex",
    "section": "",
    "text": "Les Codex is an open, evolving repository of tutorials, notebooks, and conceptual guides for quantitative programming in the sciences. Grounded in structured inference, epistemic clarity, and methodological transparency, this project brings together tools, workflows, and commentary across:\n\nR and the Tidyverse\nPython for data analysis and modelling\nJupyter Notebooks as computational narratives\nBiostatistics, quantitative ecology, and applied statistics\nReproducible research and scientific computing best practices\n\nLes Codex is not just a collection of code, it is a conceptual workspace, a digital codex, documenting and interrogating how we use programming to structure understanding in data-rich environments.\n\n\nThe repository is structured thematically and methodologically, reflecting how statistical thought intersects with code. Each section contains tutorials, commentary, and often datasets or references. Content includes:\n\nR Notebooks: General statistics, GLMs, multivariate methods, and ecological modelling.\nPython Scripts: Pandas, NumPy, matplotlib, scikit-learn, and workflow automation.\nJupyter Narratives: Stepwise modelling, data wrangling, simulation studies, etc.\nBiostatistics: Confidence intervals, power analysis, survival analysis, mixed models.\nField Applications: Sampling design, environmental data, spatiotemporal analysis.\n\nAll material is written with attention to conceptual ordering: code follows argument, not the other way around.\n\n\n\nThis is not a collection of “tips and tricks.” It is an attempt to build a living codex of computational practice—reflecting both the theory that underwrites our models and the pragmatics of their implementation.\nLes Codex privileges clarity over cleverness, rigour over speed, and understanding over mechanical reproduction.\n\n\n\nAt present, this is a personal project. If you’re aligned with the epistemic and pedagogical goals here and want to contribute, feel free to open a discussion or pull request. Contributions that bring depth, not just breadth, are welcome.\n\n\n\nMIT Licence. All content is freely available for learning, adaptation, and reuse—with attribution."
  },
  {
    "objectID": "about.html#what-youll-find-here",
    "href": "about.html#what-youll-find-here",
    "title": "About Les Codex",
    "section": "",
    "text": "The repository is structured thematically and methodologically, reflecting how statistical thought intersects with code. Each section contains tutorials, commentary, and often datasets or references. Content includes:\n\nR Notebooks: General statistics, GLMs, multivariate methods, and ecological modelling.\nPython Scripts: Pandas, NumPy, matplotlib, scikit-learn, and workflow automation.\nJupyter Narratives: Stepwise modelling, data wrangling, simulation studies, etc.\nBiostatistics: Confidence intervals, power analysis, survival analysis, mixed models.\nField Applications: Sampling design, environmental data, spatiotemporal analysis.\n\nAll material is written with attention to conceptual ordering: code follows argument, not the other way around."
  },
  {
    "objectID": "about.html#philosophy",
    "href": "about.html#philosophy",
    "title": "About Les Codex",
    "section": "",
    "text": "This is not a collection of “tips and tricks.” It is an attempt to build a living codex of computational practice—reflecting both the theory that underwrites our models and the pragmatics of their implementation.\nLes Codex privileges clarity over cleverness, rigour over speed, and understanding over mechanical reproduction."
  },
  {
    "objectID": "about.html#contributions",
    "href": "about.html#contributions",
    "title": "About Les Codex",
    "section": "",
    "text": "At present, this is a personal project. If you’re aligned with the epistemic and pedagogical goals here and want to contribute, feel free to open a discussion or pull request. Contributions that bring depth, not just breadth, are welcome."
  },
  {
    "objectID": "about.html#licence",
    "href": "about.html#licence",
    "title": "About Les Codex",
    "section": "",
    "text": "MIT Licence. All content is freely available for learning, adaptation, and reuse—with attribution."
  },
  {
    "objectID": "Introduction to R/r-basics.html",
    "href": "Introduction to R/r-basics.html",
    "title": "R Basics",
    "section": "",
    "text": "Welcome to your first R session. In this lesson you will learn how to:\n\nCreate and assign objects\nIdentify and inspect R’s basic data types\nCompute descriptive statistics\nExplore and summarise built-in datasets\nView data in RStudio\nGenerate sequences and subset using logical operations\n\nAll functions and data here are part of base R—no extra packages required.\n\n\n\nEverything in R is an object (vectors, matrices, functions, etc.). To create or update an object, use the assignment operator &lt;-:\n\n# Create a numeric vector named x \nx &lt;- c(5, 3, 9, 2, 7) \n# Create another object y \ny = 1:10   \n\n\n= also works, but &lt;- is preferred idiomatically\nTyping x in the Console then Enter will print its contents.\nUse rm(x) to remove an object.\n\n\n\n\n\nR’s core data structures include:\n\n\n\n\n\n\n\n\n\nType\nDescription\nExample\nInspect with\n\n\n\n\nVector\n1D ordered collection of elements of the same type\nc(1,2,3)\nclass(x), str(x)\n\n\nMatrix\n2D array (rows×columns)\nmatrix(1:6, nrow=2)\ndim(m), class(m)\n\n\nList\nOrdered collection of elements of any type\nlist(1, \"a\", TRUE)\nstr(l), names(l)\n\n\nData frame\nTable with columns of potentially differing types\ndata.frame(a=1:3, b=c(\"x\",\"y\",\"z\"))\nhead(df), str(df)\n\n\n\n\n\n\n\nGiven a numeric vector, R provides core summary functions:\nFunction behaviors\n\nmean(x): sum(x)/length(x)\nsd(x): √variance(x)\nquantile(x): named vector of percentiles\nsummary(x): prints Min, 1st Qu., Median, Mean, 3rd Qu., Max\n\nUse ?mean or help(\"quantile\") for details.\n\n\n\n\nR includes numerous datasets for practice:\n\n\n\n\n\n\n\n\nDataset\nDescription\nDimensions\n\n\n\n\niris\nFlower measurements by species\n150 × 5\n\n\nmtcars\nCar specs (mpg, hp, wt, etc.)\n32 × 11\n\n\nairquality\nNY air pollution (Ozone, Solar.R, Wind)\n153 × 6\n\n\nCO2\nCO₂ uptake in plants under treatments\n84 × 5\n\n\nPlantGrowth\nPlant weights under different treatments\n30 × 2\n\n\n\nLoad other datasets similarly: data(mtcars), then inspect.\n\n\n\n\n\nConsole: execute commands interactively.\nSource: script editor—write code and send to Console with Ctrl+Enter (Win/Linux) or Cmd+Enter (macOS).\nEnvironment: lists current objects—click to view.\nFiles/Plots/Packages/Help: navigate files, inspect plots, manage packages, read documentation.\n\nKey inspector functions:\n\n\n\n\nCreate predictable sequences:\n\n1:5                # 1,2,3,4,5\n\n[1] 1 2 3 4 5\n\nseq(0, 1, by=0.2)  # 0.0,0.2,...,1.0\n\n[1] 0.0 0.2 0.4 0.6 0.8 1.0\n\nrep(\"A\", times=3)  # \"A\",\"A\",\"A\"\n\n[1] \"A\" \"A\" \"A\"\n\n\n\n\n\n\nLogical tests return TRUE/FALSE:\n\nx &lt;- c(3, 6, 9, 2)\nx &gt; 5            # FALSE, TRUE, TRUE, FALSE\n\n[1] FALSE  TRUE  TRUE FALSE\n\nx == 6           # FALSE, TRUE, FALSE, FALSE\n\n[1] FALSE  TRUE FALSE FALSE\n\n\n\n\nCombine conditions:\n\nx[x &gt; 2 & x &lt; 8] # AND\n\n[1] 3 6\n\nx[x == 3 | x == 9] # OR\n\n[1] 3 9\n\n\n\n\n\n\nTo summarise all columns in a data frame:\nFor more granular control, later we’ll use dplyr::summarise() on grouped data.\n\nCongratulations—these are the essential tools of base R. Next, explore Key Packages to extend your capabilities beyond the base installation."
  },
  {
    "objectID": "Introduction to R/r-basics.html#objects-and-assignment",
    "href": "Introduction to R/r-basics.html#objects-and-assignment",
    "title": "R Basics",
    "section": "",
    "text": "Everything in R is an object (vectors, matrices, functions, etc.). To create or update an object, use the assignment operator &lt;-:\n\n# Create a numeric vector named x \nx &lt;- c(5, 3, 9, 2, 7) \n# Create another object y \ny = 1:10   \n\n\n= also works, but &lt;- is preferred idiomatically\nTyping x in the Console then Enter will print its contents.\nUse rm(x) to remove an object."
  },
  {
    "objectID": "Introduction to R/r-basics.html#base-data-types",
    "href": "Introduction to R/r-basics.html#base-data-types",
    "title": "R Basics",
    "section": "",
    "text": "R’s core data structures include:\n\n\n\n\n\n\n\n\n\nType\nDescription\nExample\nInspect with\n\n\n\n\nVector\n1D ordered collection of elements of the same type\nc(1,2,3)\nclass(x), str(x)\n\n\nMatrix\n2D array (rows×columns)\nmatrix(1:6, nrow=2)\ndim(m), class(m)\n\n\nList\nOrdered collection of elements of any type\nlist(1, \"a\", TRUE)\nstr(l), names(l)\n\n\nData frame\nTable with columns of potentially differing types\ndata.frame(a=1:3, b=c(\"x\",\"y\",\"z\"))\nhead(df), str(df)"
  },
  {
    "objectID": "Introduction to R/r-basics.html#descriptive-statistics",
    "href": "Introduction to R/r-basics.html#descriptive-statistics",
    "title": "R Basics",
    "section": "",
    "text": "Given a numeric vector, R provides core summary functions:\nFunction behaviors\n\nmean(x): sum(x)/length(x)\nsd(x): √variance(x)\nquantile(x): named vector of percentiles\nsummary(x): prints Min, 1st Qu., Median, Mean, 3rd Qu., Max\n\nUse ?mean or help(\"quantile\") for details."
  },
  {
    "objectID": "Introduction to R/r-basics.html#built-in-datasets",
    "href": "Introduction to R/r-basics.html#built-in-datasets",
    "title": "R Basics",
    "section": "",
    "text": "R includes numerous datasets for practice:\n\n\n\n\n\n\n\n\nDataset\nDescription\nDimensions\n\n\n\n\niris\nFlower measurements by species\n150 × 5\n\n\nmtcars\nCar specs (mpg, hp, wt, etc.)\n32 × 11\n\n\nairquality\nNY air pollution (Ozone, Solar.R, Wind)\n153 × 6\n\n\nCO2\nCO₂ uptake in plants under treatments\n84 × 5\n\n\nPlantGrowth\nPlant weights under different treatments\n30 × 2\n\n\n\nLoad other datasets similarly: data(mtcars), then inspect."
  },
  {
    "objectID": "Introduction to R/r-basics.html#viewing-and-inspecting-data-in-rstudio",
    "href": "Introduction to R/r-basics.html#viewing-and-inspecting-data-in-rstudio",
    "title": "R Basics",
    "section": "",
    "text": "Console: execute commands interactively.\nSource: script editor—write code and send to Console with Ctrl+Enter (Win/Linux) or Cmd+Enter (macOS).\nEnvironment: lists current objects—click to view.\nFiles/Plots/Packages/Help: navigate files, inspect plots, manage packages, read documentation.\n\nKey inspector functions:"
  },
  {
    "objectID": "Introduction to R/r-basics.html#sequences-and-repetitions",
    "href": "Introduction to R/r-basics.html#sequences-and-repetitions",
    "title": "R Basics",
    "section": "",
    "text": "Create predictable sequences:\n\n1:5                # 1,2,3,4,5\n\n[1] 1 2 3 4 5\n\nseq(0, 1, by=0.2)  # 0.0,0.2,...,1.0\n\n[1] 0.0 0.2 0.4 0.6 0.8 1.0\n\nrep(\"A\", times=3)  # \"A\",\"A\",\"A\"\n\n[1] \"A\" \"A\" \"A\""
  },
  {
    "objectID": "Introduction to R/r-basics.html#logical-operations-and-subsetting",
    "href": "Introduction to R/r-basics.html#logical-operations-and-subsetting",
    "title": "R Basics",
    "section": "",
    "text": "Logical tests return TRUE/FALSE:\n\nx &lt;- c(3, 6, 9, 2)\nx &gt; 5            # FALSE, TRUE, TRUE, FALSE\n\n[1] FALSE  TRUE  TRUE FALSE\n\nx == 6           # FALSE, TRUE, FALSE, FALSE\n\n[1] FALSE  TRUE FALSE FALSE\n\n\n\n\nCombine conditions:\n\nx[x &gt; 2 & x &lt; 8] # AND\n\n[1] 3 6\n\nx[x == 3 | x == 9] # OR\n\n[1] 3 9"
  },
  {
    "objectID": "Introduction to R/r-basics.html#summarising-a-data-frame",
    "href": "Introduction to R/r-basics.html#summarising-a-data-frame",
    "title": "R Basics",
    "section": "",
    "text": "To summarise all columns in a data frame:\nFor more granular control, later we’ll use dplyr::summarise() on grouped data.\n\nCongratulations—these are the essential tools of base R. Next, explore Key Packages to extend your capabilities beyond the base installation."
  },
  {
    "objectID": "Introduction to R/index.html",
    "href": "Introduction to R/index.html",
    "title": "Introduction to R",
    "section": "",
    "text": "This section provides an overview of R and RStudio, and directs you to two core subtopics:\n\nR Basics — fundamental functions, built-in datasets, and data exploration.\nR Packages — installing and using essential data science packages.\n\n\n\nR is a language and environment for statistical computing and graphics. Developed by Ross Ihaka and Robert Gentleman at the University of Auckland, R has grown into an open-source project maintained by the R Core Team. It excels in data manipulation, statistical modelling, and rich visualizations.\n\n\n\nRStudio is an integrated development environment (IDE) for R. Created by JJ Allaire and the RStudio team, it provides a user-friendly interface with syntax highlighting, code completion, and tools for plotting, history, and workspace management.\n\n\n\n\nOpen Source: Free to use and extend.\nCommunity: A vast ecosystem of packages (CRAN, Bioconductor).\nFlexibility: From basic statistics to advanced machine learning and data science.\nReproducibility: Integrates with R Markdown and Quarto for reproducible reports.\n\n\n\n\n\n\n\nDownload R: https://cran.r-project.org/bin/windows/base/\n\nRun the installer and follow the prompts.\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nDownload R: https://cran.r-project.org/bin/macosx/\n\nInstall the .pkg file.\n\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nFollow your distribution’s instructions: https://cran.r-project.org/bin/linux/\n\nInstall via package manager (e.g., sudo apt install r-base).\n\nDownload and install RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\n\n\n\n\n\n\nRStudio’s default layout consists of four key panes arranged in a 2x2 grid. You can customise this arrangement via View → Panes → Pane Layout.\n\nSource Editor (Top-Left)\n\nContains your script or Quarto document.\nFeatures line numbering, syntax highlighting, and code folding (collapse/expand blocks).\nUse Ctrl+Shift+N (Windows/Linux) or Cmd+Shift+N (macOS) to create a new script.\n\nConsole (Bottom-Left)\n\nExecutes R commands interactively.\nShows directly evaluated expressions and error messages.\nYou can run selected code from the Source with Ctrl+Enter or Cmd+Enter.\n\nEnvironment/History (Top-Right)\n\nEnvironment tab lists current objects: variables, data frames, functions.\nHistory tab records all commands you’ve executed in the console.\nClick the broom icon in Environment to clear workspace.\n\nFiles/Plots/Packages/Help/Viewer (Bottom-Right)\n\nFiles: Browse project files; open by double-clicking.\nPlots: Shows generated graphs; use arrows to navigate past plots.\nPackages: Install, update, and load packages with checkboxes.\nHelp: Access documentation for functions and packages; search by term.\nViewer: Renders HTML outputs, such as Quarto previews or shiny apps.\n\n\n\n\n\n\n\nRStudio’s IDE is highly configurable. Below are step-by-step instructions to tailor the environment for productivity, including how to install GitHub Copilot support.\n\n\n\nPrerequisite: You need RStudio 2023.06.1 or later and a valid GitHub Copilot subscription.\n\nInstall the Extension:\n\nIn RStudio, go to Tools → Global Options → Visual Studio Code → Enable VS Code extensions.\n\nClick Install when prompted; RStudio will download the VS Code extension host.\n\n\nEnable Copilot:\n\nRestart RStudio.\n\nOpen Tools → Addins → Browse Addins, search for “GitHub Copilot”, and click Install.\n\nAfter installation, Copilot icons appear in the toolbar.\n\n\nAuthenticate:\n\nClick the Copilot icon (a small airplane) in the top-right of the Source pane.\n\nA dialog opens: click Sign in with GitHub, follow the browser prompts, and authorise Copilot.\n\nBack in RStudio, you should see “Copilot: Enabled” in the status bar.\n\n\n\nPro tip: Use Alt + \\ (Windows/Linux) or Option + \\ (macOS) to trigger Copilot suggestions inline.\n\n\n\n\n\n\nEditor Theme:\n\nTools → Global Options → Appearance.\n\nUnder Editor theme, select your preferred dark or light theme (e.g., “Tomorrow Night Bright” or “Solarized Light”).\n\n\nFont & Size:\n\nIn the same pane, choose a monospaced font (e.g., Consolas, Fira Code) and set size (10–14 pt).\n\n\nZoom In/Out:\n\nUse Ctrl + / Ctrl – (Windows/Linux) or Cmd + / Cmd – (macOS) to quickly adjust text size on the fly.\n\n\n\n\n\n\nRStudio lets you rearrange its four panes:\n\nTools → Global Options → Pane Layout.\n\nChoose one of the presets (e.g., Source/Console | Environment/History | Files/Plots/Packages/Help), or drag-and-drop each pane to your desired quadrant.\n\nShow/Hide Panes:\n\nUse the small X icon on any pane’s title bar to collapse it.\n\nRestore via View → Panes → Show [Pane Name].\n\n\n\nShortcut: Shift + Esc hides the current pane.\n\n\n\n\n\n\nCode Snippets:\n\nTools → Global Options → Code → Edit Snippets.\n\nDefine your own shortcuts, e.g.:\nsnippet fun  \n  function(${1:args}) {\\n\\t${0}\\n}  \nTyping fun + Tab expands into the function skeleton.\n\n\nAddins:\n\nInstall packages that supply addins (e.g., datapasta, reprex).\n\nAfter installation, find them under Addins → Browse Addins and tick those you use frequently.\n\nYou can also assign keyboard shortcuts via Tools → Modify Keyboard Shortcuts.\n\n\n\n\n\n\n\nRun current line: Ctrl + Enter / Cmd + Enter\n\nRun selection / run to next: Ctrl + Alt + R / Cmd + Option + R\n\nFind in file: Ctrl + F / Cmd + F\n\nGo to File/Function: Ctrl + . / Cmd + .\n\nBuild R Package: Ctrl + Shift + B / Cmd + Shift + B\n\nInsert Pipe Operator: Ctrl + Shift + M / Cmd + Shift + M\n\nFor a complete list, open Help → Keyboard Shortcuts Help."
  },
  {
    "objectID": "Introduction to R/index.html#what-is-r",
    "href": "Introduction to R/index.html#what-is-r",
    "title": "Introduction to R",
    "section": "",
    "text": "R is a language and environment for statistical computing and graphics. Developed by Ross Ihaka and Robert Gentleman at the University of Auckland, R has grown into an open-source project maintained by the R Core Team. It excels in data manipulation, statistical modelling, and rich visualizations."
  },
  {
    "objectID": "Introduction to R/index.html#what-is-rstudio",
    "href": "Introduction to R/index.html#what-is-rstudio",
    "title": "Introduction to R",
    "section": "",
    "text": "RStudio is an integrated development environment (IDE) for R. Created by JJ Allaire and the RStudio team, it provides a user-friendly interface with syntax highlighting, code completion, and tools for plotting, history, and workspace management."
  },
  {
    "objectID": "Introduction to R/index.html#why-use-r",
    "href": "Introduction to R/index.html#why-use-r",
    "title": "Introduction to R",
    "section": "",
    "text": "Open Source: Free to use and extend.\nCommunity: A vast ecosystem of packages (CRAN, Bioconductor).\nFlexibility: From basic statistics to advanced machine learning and data science.\nReproducibility: Integrates with R Markdown and Quarto for reproducible reports."
  },
  {
    "objectID": "Introduction to R/index.html#installation",
    "href": "Introduction to R/index.html#installation",
    "title": "Introduction to R",
    "section": "",
    "text": "Download R: https://cran.r-project.org/bin/windows/base/\n\nRun the installer and follow the prompts.\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nDownload R: https://cran.r-project.org/bin/macosx/\n\nInstall the .pkg file.\n\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nFollow your distribution’s instructions: https://cran.r-project.org/bin/linux/\n\nInstall via package manager (e.g., sudo apt install r-base).\n\nDownload and install RStudio Desktop: https://posit.co/download/rstudio-desktop/"
  },
  {
    "objectID": "Introduction to R/index.html#getting-started-with-rstudio",
    "href": "Introduction to R/index.html#getting-started-with-rstudio",
    "title": "Introduction to R",
    "section": "",
    "text": "RStudio’s default layout consists of four key panes arranged in a 2x2 grid. You can customise this arrangement via View → Panes → Pane Layout.\n\nSource Editor (Top-Left)\n\nContains your script or Quarto document.\nFeatures line numbering, syntax highlighting, and code folding (collapse/expand blocks).\nUse Ctrl+Shift+N (Windows/Linux) or Cmd+Shift+N (macOS) to create a new script.\n\nConsole (Bottom-Left)\n\nExecutes R commands interactively.\nShows directly evaluated expressions and error messages.\nYou can run selected code from the Source with Ctrl+Enter or Cmd+Enter.\n\nEnvironment/History (Top-Right)\n\nEnvironment tab lists current objects: variables, data frames, functions.\nHistory tab records all commands you’ve executed in the console.\nClick the broom icon in Environment to clear workspace.\n\nFiles/Plots/Packages/Help/Viewer (Bottom-Right)\n\nFiles: Browse project files; open by double-clicking.\nPlots: Shows generated graphs; use arrows to navigate past plots.\nPackages: Install, update, and load packages with checkboxes.\nHelp: Access documentation for functions and packages; search by term.\nViewer: Renders HTML outputs, such as Quarto previews or shiny apps."
  },
  {
    "objectID": "Introduction to R/index.html#customising-your-rstudio-workspace",
    "href": "Introduction to R/index.html#customising-your-rstudio-workspace",
    "title": "Introduction to R",
    "section": "",
    "text": "RStudio’s IDE is highly configurable. Below are step-by-step instructions to tailor the environment for productivity, including how to install GitHub Copilot support.\n\n\n\nPrerequisite: You need RStudio 2023.06.1 or later and a valid GitHub Copilot subscription.\n\nInstall the Extension:\n\nIn RStudio, go to Tools → Global Options → Visual Studio Code → Enable VS Code extensions.\n\nClick Install when prompted; RStudio will download the VS Code extension host.\n\n\nEnable Copilot:\n\nRestart RStudio.\n\nOpen Tools → Addins → Browse Addins, search for “GitHub Copilot”, and click Install.\n\nAfter installation, Copilot icons appear in the toolbar.\n\n\nAuthenticate:\n\nClick the Copilot icon (a small airplane) in the top-right of the Source pane.\n\nA dialog opens: click Sign in with GitHub, follow the browser prompts, and authorise Copilot.\n\nBack in RStudio, you should see “Copilot: Enabled” in the status bar.\n\n\n\nPro tip: Use Alt + \\ (Windows/Linux) or Option + \\ (macOS) to trigger Copilot suggestions inline.\n\n\n\n\n\n\nEditor Theme:\n\nTools → Global Options → Appearance.\n\nUnder Editor theme, select your preferred dark or light theme (e.g., “Tomorrow Night Bright” or “Solarized Light”).\n\n\nFont & Size:\n\nIn the same pane, choose a monospaced font (e.g., Consolas, Fira Code) and set size (10–14 pt).\n\n\nZoom In/Out:\n\nUse Ctrl + / Ctrl – (Windows/Linux) or Cmd + / Cmd – (macOS) to quickly adjust text size on the fly.\n\n\n\n\n\n\nRStudio lets you rearrange its four panes:\n\nTools → Global Options → Pane Layout.\n\nChoose one of the presets (e.g., Source/Console | Environment/History | Files/Plots/Packages/Help), or drag-and-drop each pane to your desired quadrant.\n\nShow/Hide Panes:\n\nUse the small X icon on any pane’s title bar to collapse it.\n\nRestore via View → Panes → Show [Pane Name].\n\n\n\nShortcut: Shift + Esc hides the current pane.\n\n\n\n\n\n\nCode Snippets:\n\nTools → Global Options → Code → Edit Snippets.\n\nDefine your own shortcuts, e.g.:\nsnippet fun  \n  function(${1:args}) {\\n\\t${0}\\n}  \nTyping fun + Tab expands into the function skeleton.\n\n\nAddins:\n\nInstall packages that supply addins (e.g., datapasta, reprex).\n\nAfter installation, find them under Addins → Browse Addins and tick those you use frequently.\n\nYou can also assign keyboard shortcuts via Tools → Modify Keyboard Shortcuts.\n\n\n\n\n\n\n\nRun current line: Ctrl + Enter / Cmd + Enter\n\nRun selection / run to next: Ctrl + Alt + R / Cmd + Option + R\n\nFind in file: Ctrl + F / Cmd + F\n\nGo to File/Function: Ctrl + . / Cmd + .\n\nBuild R Package: Ctrl + Shift + B / Cmd + Shift + B\n\nInsert Pipe Operator: Ctrl + Shift + M / Cmd + Shift + M\n\nFor a complete list, open Help → Keyboard Shortcuts Help."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to Les Codex",
    "section": "",
    "text": "Welcome to Les Codex — a digital companion for those beginning, refining, or critically engaging with R and machine learning. This site serves as both a structured archive and a dynamic learning space. At its core, it offers a gradual yet rigorous introduction to statistical programming with R, foregrounding practical applications without neglecting conceptual clarity.\nThe content is organised to ease transitions between foundational concepts and advanced topics. Beginners will find scaffolding for essential syntax, data structures, and plotting. As you progress, you’ll encounter materials that draw from quantitative ecology, biostatistics, and machine learning — areas that demand both algorithmic precision and epistemic care.\nThis is not a passive repository of tutorials. It is intended to sharpen your sense of inquiry, to cultivate a habit of testing assumptions, and to familiarise you with tools that distinguish signal from noise. You are encouraged to move back and forth between the sections, treat examples as modifiable experiments, and reflect critically on how code interacts with data and method.\n\n\n\n\nLiteracy in R: By engaging with the early modules, you will learn the grammar of R, how to write clean and purposeful code, and how to structure analyses in a reproducible manner.\nAnalytical Thinking: Through exposure to worked examples, simulation models, and applied problems, you’ll build an instinct for structured inference and statistical reasoning.\nPathway to Machine Learning: The later stages of the site introduce supervised and unsupervised learning using tidymodels, with emphasis on interpretability and model evaluation rather than hype.\nScientific Integrity: Beyond technical fluency, the material aims to nurture a disposition attentive to scale, uncertainty, and the philosophical dimensions of modelling.\n\nThis site is maintained as a living document. Contributions, criticisms, and alternative approaches are welcome — the goal is not completeness, but clarity and seriousness.\n\nLes Codex is for the reader who values careful work, conceptual grounding, and practical experimentation. It is not a fast track — it is a foundation.\n\n\n\nCreated with 💻 by Phemelo Rutlokoane"
  },
  {
    "objectID": "index.html#les-codex",
    "href": "index.html#les-codex",
    "title": "Welcome to Les Codex",
    "section": "",
    "text": "Welcome to Les Codex — a digital companion for those beginning, refining, or critically engaging with R and machine learning. This site serves as both a structured archive and a dynamic learning space. At its core, it offers a gradual yet rigorous introduction to statistical programming with R, foregrounding practical applications without neglecting conceptual clarity.\nThe content is organised to ease transitions between foundational concepts and advanced topics. Beginners will find scaffolding for essential syntax, data structures, and plotting. As you progress, you’ll encounter materials that draw from quantitative ecology, biostatistics, and machine learning — areas that demand both algorithmic precision and epistemic care.\nThis is not a passive repository of tutorials. It is intended to sharpen your sense of inquiry, to cultivate a habit of testing assumptions, and to familiarise you with tools that distinguish signal from noise. You are encouraged to move back and forth between the sections, treat examples as modifiable experiments, and reflect critically on how code interacts with data and method.\n\n\n\n\nLiteracy in R: By engaging with the early modules, you will learn the grammar of R, how to write clean and purposeful code, and how to structure analyses in a reproducible manner.\nAnalytical Thinking: Through exposure to worked examples, simulation models, and applied problems, you’ll build an instinct for structured inference and statistical reasoning.\nPathway to Machine Learning: The later stages of the site introduce supervised and unsupervised learning using tidymodels, with emphasis on interpretability and model evaluation rather than hype.\nScientific Integrity: Beyond technical fluency, the material aims to nurture a disposition attentive to scale, uncertainty, and the philosophical dimensions of modelling.\n\nThis site is maintained as a living document. Contributions, criticisms, and alternative approaches are welcome — the goal is not completeness, but clarity and seriousness.\n\nLes Codex is for the reader who values careful work, conceptual grounding, and practical experimentation. It is not a fast track — it is a foundation.\n\n\n\nCreated with 💻 by Phemelo Rutlokoane"
  },
  {
    "objectID": "Introduction to R/packages.html",
    "href": "Introduction to R/packages.html",
    "title": "Key R Packages",
    "section": "",
    "text": "R’s power lies in its rich package ecosystem. In this lesson you will learn how to:\n\nInstall and load packages\n\nNavigate the tidyverse meta-package and its components\n\nUse vegan for ecological analyses\n\nExplore several other essential packages\n\nAll examples assume you have installed and loaded the packages as shown below.\n\n\n\n\n# Install core data-science packages from CRAN \ninstall.packages(\"tidyverse\") # includes ggplot2, dplyr, tidyr, readr, purrr, etc. \ninstall.packages(\"vegan\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"sf\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"lubridate\") \ninstall.packages(\"stringr\") \ninstall.packages(\"purrr\")\n\nTip: Run these commands interactively in your console. To avoid mirror prompts, specify repos = \"https://cloud.r-project.org\".\n\n\n\n\n\nUse library(pkg, quietly = TRUE) to suppress startup messages.\nconflicts() shows any function name clashes.\n\n\n\n\n\ntidyverse is a coherent suite by Hadley Wickham & team. It shares a uniform syntax and philosophy:\n\n\nA grammar for data manipulation:\n\nfilter(df, condition)\nselect(df, cols)\nmutate(df, new = expr)\narrange(df, cols)\nsummarise(df, agg = func(col))\n\n\n# Example: summarise mtcars by cyl\ndf &lt;- as_tibble(mtcars)\ndf %&gt;% \n  group_by(cyl) %&gt;%\n  summarise(\n    avg_mpg = mean(mpg),\n    max_hp  = max(hp),\n    n       = n()\n  )\n\n# A tibble: 3 × 4\n    cyl avg_mpg max_hp     n\n  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;\n1     4    26.7    113    11\n2     6    19.7    175     7\n3     8    15.1    335    14\n\n\n\n\n\nA layered grammar of graphics:\n\nggplot(data, aes(x, y, ...))\ngeom_point(), geom_line(), geom_histogram()\nlabs(), theme_*()\n\n\nggplot(df, aes(x = factor(cyl), y = mpg)) +\n  geom_col(fill = \"steelblue\") +\n  labs(\n    title = \"MPG by Cylinder Count\",\n    x     = \"Cylinders\",\n    y     = \"MPG\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nTools to tidy data:\n\npivot_longer(df, cols, names_to, values_to)\npivot_wider(df, names_from, values_from)\n\n\n# Convert mtcars summary to long form\nlong_df &lt;- df %&gt;%\n  pivot_longer(\n    cols = c(mpg, hp),\n    names_to  = \"metric\",\n    values_to = \"value\"\n  )\nhead(long_df)\n\n# A tibble: 6 × 11\n    cyl  disp  drat    wt  qsec    vs    am  gear  carb metric value\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;\n1     6   160  3.9   2.62  16.5     0     1     4     4 mpg     21  \n2     6   160  3.9   2.62  16.5     0     1     4     4 hp     110  \n3     6   160  3.9   2.88  17.0     0     1     4     4 mpg     21  \n4     6   160  3.9   2.88  17.0     0     1     4     4 hp     110  \n5     4   108  3.85  2.32  18.6     1     1     4     1 mpg     22.8\n6     4   108  3.85  2.32  18.6     1     1     4     1 hp      93  \n\n\n\n\n\nFast data import:\n\nread_csv(\"file.csv\")\nread_delim(\"file.txt\", delim = \"\\t\")\n\n\n# Example: df2 &lt;- read_csv(\"data/mydata.csv\")\n\n\n\n\nFunctional programming:\n\nmap(df, f) applies f to each column\nmap_df(list_of_dfs, bind_rows) combines multiple data frames\n\n\n# Example: compute mean of each numeric column\nmap_dbl(df, ~ if(is.numeric(.x)) mean(.x) else NA_real_)\n\n       mpg        cyl       disp         hp       drat         wt       qsec \n 20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n        vs         am       gear       carb \n  0.437500   0.406250   3.687500   2.812500 \n\n\n\n\n\n\n\nSpecialised for community ecology:\n\ndiversity(x, index = \"shannon\") – Shannon diversity index\nmetaMDS(x, distance = \"bray\", k = 2) – non-metric MDS ordination\nrda(x, y) – redundancy analysis (constrained ordination)\n\n\n# Example using dune dataset\ndata(dune)\ndiv_shannon &lt;- diversity(dune, index = \"shannon\")\nmeta  &lt;- metaMDS(dune, distance = \"bray\", k = 2)\n\nRun 0 stress 0.1192678 \nRun 1 stress 0.1192678 \n... Procrustes: rmse 5.891532e-05  max resid 0.0001555799 \n... Similar to previous best\nRun 2 stress 0.1183186 \n... New best solution\n... Procrustes: rmse 0.02027048  max resid 0.06496267 \nRun 3 stress 0.1183186 \n... Procrustes: rmse 5.040434e-06  max resid 1.703158e-05 \n... Similar to previous best\nRun 4 stress 0.1192679 \nRun 5 stress 0.1183186 \n... Procrustes: rmse 6.844683e-06  max resid 2.16387e-05 \n... Similar to previous best\nRun 6 stress 0.1192678 \nRun 7 stress 0.1192678 \nRun 8 stress 0.1939202 \nRun 9 stress 0.1192678 \nRun 10 stress 0.1812933 \nRun 11 stress 0.1192679 \nRun 12 stress 0.1192678 \nRun 13 stress 0.192224 \nRun 14 stress 0.1990349 \nRun 15 stress 0.1192678 \nRun 16 stress 0.192224 \nRun 17 stress 0.1886532 \nRun 18 stress 0.1183186 \n... Procrustes: rmse 7.509949e-06  max resid 2.325173e-05 \n... Similar to previous best\nRun 19 stress 0.1886532 \nRun 20 stress 0.1192678 \n*** Best solution repeated 3 times\n\nplot(meta, type = \"n\"); text(meta, display = \"sites\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHandles spatial vector data:\n\n# sf::st_read(\"path/to/shapefile.shp\")\n\n\n\n\nSimplifies date-time work:\n\nymd(\"2022-01-15\"), hms(\"12:30:45\")\ntoday(), now(), year(), month(), day()\n\n\nd &lt;- ymd(\"2025-05-14\")\nyear(d); month(d); wday(d, label = TRUE)\n\n[1] 2025\n\n\n[1] 5\n\n\n[1] Wed\nLevels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat\n\n\n\n\n\nConsistent string manipulation:\n\nstr_detect(string, pattern)\nstr_replace(string, pattern, replacement)\n\n\nwords &lt;- c(\"data\", \"science\", \"analysis\")\nstr_detect(words, \"a\")    # TRUE, TRUE, FALSE\n\n[1]  TRUE FALSE  TRUE\n\n\n\n\n\n(see above) for advanced iteration.\n\nBy the end of this lesson you should understand the core tidyverse packages, how to manipulate, visualise, and model data, and where to go next for specialised analyses. Proceed to the Error Bypass Atlas or return to Introduction to R."
  },
  {
    "objectID": "Introduction to R/packages.html#installing-packages",
    "href": "Introduction to R/packages.html#installing-packages",
    "title": "Key R Packages",
    "section": "",
    "text": "# Install core data-science packages from CRAN \ninstall.packages(\"tidyverse\") # includes ggplot2, dplyr, tidyr, readr, purrr, etc. \ninstall.packages(\"vegan\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"sf\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"lubridate\") \ninstall.packages(\"stringr\") \ninstall.packages(\"purrr\")\n\nTip: Run these commands interactively in your console. To avoid mirror prompts, specify repos = \"https://cloud.r-project.org\"."
  },
  {
    "objectID": "Introduction to R/packages.html#loading-packages",
    "href": "Introduction to R/packages.html#loading-packages",
    "title": "Key R Packages",
    "section": "",
    "text": "Use library(pkg, quietly = TRUE) to suppress startup messages.\nconflicts() shows any function name clashes."
  },
  {
    "objectID": "Introduction to R/packages.html#the-tidyverse-ecosystem",
    "href": "Introduction to R/packages.html#the-tidyverse-ecosystem",
    "title": "Key R Packages",
    "section": "",
    "text": "tidyverse is a coherent suite by Hadley Wickham & team. It shares a uniform syntax and philosophy:\n\n\nA grammar for data manipulation:\n\nfilter(df, condition)\nselect(df, cols)\nmutate(df, new = expr)\narrange(df, cols)\nsummarise(df, agg = func(col))\n\n\n# Example: summarise mtcars by cyl\ndf &lt;- as_tibble(mtcars)\ndf %&gt;% \n  group_by(cyl) %&gt;%\n  summarise(\n    avg_mpg = mean(mpg),\n    max_hp  = max(hp),\n    n       = n()\n  )\n\n# A tibble: 3 × 4\n    cyl avg_mpg max_hp     n\n  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;\n1     4    26.7    113    11\n2     6    19.7    175     7\n3     8    15.1    335    14\n\n\n\n\n\nA layered grammar of graphics:\n\nggplot(data, aes(x, y, ...))\ngeom_point(), geom_line(), geom_histogram()\nlabs(), theme_*()\n\n\nggplot(df, aes(x = factor(cyl), y = mpg)) +\n  geom_col(fill = \"steelblue\") +\n  labs(\n    title = \"MPG by Cylinder Count\",\n    x     = \"Cylinders\",\n    y     = \"MPG\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nTools to tidy data:\n\npivot_longer(df, cols, names_to, values_to)\npivot_wider(df, names_from, values_from)\n\n\n# Convert mtcars summary to long form\nlong_df &lt;- df %&gt;%\n  pivot_longer(\n    cols = c(mpg, hp),\n    names_to  = \"metric\",\n    values_to = \"value\"\n  )\nhead(long_df)\n\n# A tibble: 6 × 11\n    cyl  disp  drat    wt  qsec    vs    am  gear  carb metric value\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;\n1     6   160  3.9   2.62  16.5     0     1     4     4 mpg     21  \n2     6   160  3.9   2.62  16.5     0     1     4     4 hp     110  \n3     6   160  3.9   2.88  17.0     0     1     4     4 mpg     21  \n4     6   160  3.9   2.88  17.0     0     1     4     4 hp     110  \n5     4   108  3.85  2.32  18.6     1     1     4     1 mpg     22.8\n6     4   108  3.85  2.32  18.6     1     1     4     1 hp      93  \n\n\n\n\n\nFast data import:\n\nread_csv(\"file.csv\")\nread_delim(\"file.txt\", delim = \"\\t\")\n\n\n# Example: df2 &lt;- read_csv(\"data/mydata.csv\")\n\n\n\n\nFunctional programming:\n\nmap(df, f) applies f to each column\nmap_df(list_of_dfs, bind_rows) combines multiple data frames\n\n\n# Example: compute mean of each numeric column\nmap_dbl(df, ~ if(is.numeric(.x)) mean(.x) else NA_real_)\n\n       mpg        cyl       disp         hp       drat         wt       qsec \n 20.090625   6.187500 230.721875 146.687500   3.596563   3.217250  17.848750 \n        vs         am       gear       carb \n  0.437500   0.406250   3.687500   2.812500"
  },
  {
    "objectID": "Introduction to R/packages.html#the-vegan-package",
    "href": "Introduction to R/packages.html#the-vegan-package",
    "title": "Key R Packages",
    "section": "",
    "text": "Specialised for community ecology:\n\ndiversity(x, index = \"shannon\") – Shannon diversity index\nmetaMDS(x, distance = \"bray\", k = 2) – non-metric MDS ordination\nrda(x, y) – redundancy analysis (constrained ordination)\n\n\n# Example using dune dataset\ndata(dune)\ndiv_shannon &lt;- diversity(dune, index = \"shannon\")\nmeta  &lt;- metaMDS(dune, distance = \"bray\", k = 2)\n\nRun 0 stress 0.1192678 \nRun 1 stress 0.1192678 \n... Procrustes: rmse 5.891532e-05  max resid 0.0001555799 \n... Similar to previous best\nRun 2 stress 0.1183186 \n... New best solution\n... Procrustes: rmse 0.02027048  max resid 0.06496267 \nRun 3 stress 0.1183186 \n... Procrustes: rmse 5.040434e-06  max resid 1.703158e-05 \n... Similar to previous best\nRun 4 stress 0.1192679 \nRun 5 stress 0.1183186 \n... Procrustes: rmse 6.844683e-06  max resid 2.16387e-05 \n... Similar to previous best\nRun 6 stress 0.1192678 \nRun 7 stress 0.1192678 \nRun 8 stress 0.1939202 \nRun 9 stress 0.1192678 \nRun 10 stress 0.1812933 \nRun 11 stress 0.1192679 \nRun 12 stress 0.1192678 \nRun 13 stress 0.192224 \nRun 14 stress 0.1990349 \nRun 15 stress 0.1192678 \nRun 16 stress 0.192224 \nRun 17 stress 0.1886532 \nRun 18 stress 0.1183186 \n... Procrustes: rmse 7.509949e-06  max resid 2.325173e-05 \n... Similar to previous best\nRun 19 stress 0.1886532 \nRun 20 stress 0.1192678 \n*** Best solution repeated 3 times\n\nplot(meta, type = \"n\"); text(meta, display = \"sites\")"
  },
  {
    "objectID": "Introduction to R/packages.html#other-essential-packages",
    "href": "Introduction to R/packages.html#other-essential-packages",
    "title": "Key R Packages",
    "section": "",
    "text": "Handles spatial vector data:\n\n# sf::st_read(\"path/to/shapefile.shp\")\n\n\n\n\nSimplifies date-time work:\n\nymd(\"2022-01-15\"), hms(\"12:30:45\")\ntoday(), now(), year(), month(), day()\n\n\nd &lt;- ymd(\"2025-05-14\")\nyear(d); month(d); wday(d, label = TRUE)\n\n[1] 2025\n\n\n[1] 5\n\n\n[1] Wed\nLevels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat\n\n\n\n\n\nConsistent string manipulation:\n\nstr_detect(string, pattern)\nstr_replace(string, pattern, replacement)\n\n\nwords &lt;- c(\"data\", \"science\", \"analysis\")\nstr_detect(words, \"a\")    # TRUE, TRUE, FALSE\n\n[1]  TRUE FALSE  TRUE\n\n\n\n\n\n(see above) for advanced iteration.\n\nBy the end of this lesson you should understand the core tidyverse packages, how to manipulate, visualise, and model data, and where to go next for specialised analyses. Proceed to the Error Bypass Atlas or return to Introduction to R."
  },
  {
    "objectID": "Capstone Analysis/index.html",
    "href": "Capstone Analysis/index.html",
    "title": "Diel Vertical Migration Analysis Tutorial",
    "section": "",
    "text": "This page provides a step-by-step walkthrough of the R analysis used to investigate diel vertical migration (DVM) patterns of euphausiids in St Helena Bay for our Capstone project (2025). It is designed as a tutorial for readers unfamiliar with the workflow. We will:\n\nLoad and inspect the data\nCreate derived variables (e.g., period, CastID)\nStandardize and transform counts\nAggregate by cast and perform two-way ANOVA\nGenerate summary tables\nPlot environmental profiles and abundance profiles\n\nAt the end, you will have a working R-script that can be modified for similar ecological datasets.\nDownload the dataset here.\n\n\nEnsure you have installed the following R packages:\n\ninstall.packages(c(\"dplyr\", \"ggplot2\", \"lme4\", \"emmeans\", \"knitr\"))\n\nThen, load these libraries:\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lme4)  # Only if you want to experiment with mixed models\nlibrary(emmeans)\nlibrary(knitr)  # For rendering tables\nlibrary(tidyverse)"
  },
  {
    "objectID": "Capstone Analysis/index.html#prerequisites",
    "href": "Capstone Analysis/index.html#prerequisites",
    "title": "Diel Vertical Migration Analysis Tutorial",
    "section": "",
    "text": "Ensure you have installed the following R packages:\n\ninstall.packages(c(\"dplyr\", \"ggplot2\", \"lme4\", \"emmeans\", \"knitr\"))\n\nThen, load these libraries:\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lme4)  # Only if you want to experiment with mixed models\nlibrary(emmeans)\nlibrary(knitr)  # For rendering tables\nlibrary(tidyverse)"
  },
  {
    "objectID": "Capstone Analysis/index.html#provided-mean-values-no-re-calculation",
    "href": "Capstone Analysis/index.html#provided-mean-values-no-re-calculation",
    "title": "Diel Vertical Migration Analysis Tutorial",
    "section": "5.1 Provided Mean Values (no re-calculation)",
    "text": "5.1 Provided Mean Values (no re-calculation)\nUse the pre-computed mean_temp and mean_fluoro columns from the biological dataset. We select unique combinations of station, depth bin, and period:\n\nenv_provided &lt;- capstone_df %&gt;%\n  select(Station, DepthRange, period, mean_temp, mean_fluoro) %&gt;%\n  distinct()\n\nkable(env_provided,\n      caption = \"Provided mean temperature and fluorescence by station, depth range, and period.\")\n\n\nProvided mean temperature and fluorescence by station, depth range, and period.\n\n\nStation\nDepthRange\nperiod\nmean_temp\nmean_fluoro\n\n\n\n\nInshore\n0-10m\nNight\n17.850000\n112.56300\n\n\nInshore\n0-10m\nNight\n17.000000\n121.18800\n\n\nInshore\n0-10m\nDay\n16.915000\n116.42600\n\n\nInshore\n0-10m\nDay\n17.765000\n127.38350\n\n\nInshore\n0-10m\nDay\n18.105000\n116.29650\n\n\nInshore\n0-10m\nNight\n16.830000\n110.14150\n\n\nInshore\n0-10m\nNight\n16.915000\n119.42250\n\n\nInshore\n0-10m\nNight\n17.850000\n117.61650\n\n\nInshore\n0-10m\nDay\n18.020000\n117.61650\n\n\nInshore\n0-10m\nDay\n17.085000\n118.63700\n\n\nInshore\n0-10m\nDay\n16.405000\n115.47850\n\n\nInshore\n0-10m\nNight\n16.320000\n127.42400\n\n\nInshore\n10-20m\nNight\n13.865000\n100.90200\n\n\nInshore\n10-20m\nNight\n14.112500\n106.50400\n\n\nInshore\n10-20m\nDay\n14.892500\n110.93400\n\n\nInshore\n10-20m\nDay\n14.545000\n107.56200\n\n\nInshore\n10-20m\nDay\n13.847500\n104.03800\n\n\nInshore\n10-20m\nNight\n14.480000\n112.03000\n\n\nInshore\n10-20m\nNight\n15.067500\n105.60600\n\n\nInshore\n10-20m\nNight\n14.857500\n111.09000\n\n\nInshore\n10-20m\nDay\n13.652500\n100.23600\n\n\nInshore\n10-20m\nDay\n14.432500\n112.14800\n\n\nInshore\n10-20m\nDay\n14.480000\n106.50400\n\n\nInshore\n10-20m\nNight\n14.367500\n107.28800\n\n\nInshore\n20-30m\nNight\n11.122000\n12.48300\n\n\nInshore\n20-30m\nNight\n11.543000\n12.42750\n\n\nInshore\n20-30m\nDay\n12.279500\n11.42700\n\n\nInshore\n20-30m\nDay\n11.454500\n12.43950\n\n\nInshore\n20-30m\nDay\n11.509000\n12.53850\n\n\nInshore\n20-30m\nNight\n11.999500\n12.91500\n\n\nInshore\n20-30m\nNight\n11.550500\n11.65350\n\n\nInshore\n20-30m\nNight\n10.936000\n12.60600\n\n\nInshore\n20-30m\nDay\n12.411000\n12.47400\n\n\nInshore\n20-30m\nDay\n11.028000\n12.67350\n\n\nInshore\n20-30m\nDay\n10.834500\n11.50650\n\n\nInshore\n20-30m\nNight\n10.842000\n12.24900\n\n\nInshore\n30-50m\nNight\n10.124750\n3.70000\n\n\nInshore\n30-50m\nNight\n10.226750\n3.59050\n\n\nInshore\n30-50m\nDay\n9.881000\n3.67325\n\n\nInshore\n30-50m\nDay\n9.937250\n3.75850\n\n\nInshore\n30-50m\nDay\n9.501250\n3.51975\n\n\nInshore\n30-50m\nNight\n9.415500\n3.65600\n\n\nInshore\n30-50m\nNight\n10.393750\n3.57225\n\n\nInshore\n30-50m\nNight\n9.771000\n3.40125\n\n\nInshore\n30-50m\nDay\n10.151250\n3.43900\n\n\nInshore\n30-50m\nDay\n9.619500\n3.46400\n\n\nInshore\n30-50m\nDay\n9.639250\n3.47275\n\n\nInshore\n30-50m\nNight\n9.626000\n3.60775\n\n\nInshore\n50-100m\nNight\n7.768300\n0.20480\n\n\nInshore\n50-100m\nNight\n7.708800\n0.18780\n\n\nInshore\n50-100m\nDay\n7.802300\n0.19980\n\n\nInshore\n50-100m\nDay\n7.444900\n0.18720\n\n\nInshore\n50-100m\nDay\n7.628900\n0.19900\n\n\nInshore\n50-100m\nNight\n7.669500\n0.19270\n\n\nInshore\n50-100m\nNight\n7.472000\n0.19880\n\n\nInshore\n50-100m\nNight\n7.619600\n0.18730\n\n\nInshore\n50-100m\nDay\n7.777200\n0.18720\n\n\nInshore\n50-100m\nDay\n7.543100\n0.20800\n\n\nInshore\n50-100m\nDay\n7.874000\n0.20140\n\n\nInshore\n50-100m\nNight\n7.531400\n0.20160\n\n\nInshore\n100-200m\nNight\n6.841000\n0.00000\n\n\nInshore\n100-200m\nNight\n6.813500\n0.00000\n\n\nInshore\n100-200m\nDay\n6.960250\n0.00000\n\n\nInshore\n100-200m\nDay\n7.123250\n0.00000\n\n\nInshore\n100-200m\nDay\n6.668750\n0.00000\n\n\nInshore\n100-200m\nNight\n6.730750\n0.00000\n\n\nInshore\n100-200m\nNight\n7.128000\n0.00000\n\n\nInshore\n100-200m\nNight\n6.646000\n0.00000\n\n\nInshore\n100-200m\nDay\n6.845750\n0.00000\n\n\nInshore\n100-200m\nDay\n6.916750\n0.00000\n\n\nInshore\n100-200m\nDay\n7.246000\n0.00000\n\n\nInshore\n100-200m\nNight\n6.952500\n0.00000\n\n\nOffshore\n0-10m\nNight\n23.855000\n5.61400\n\n\nOffshore\n0-10m\nNight\n23.840000\n5.64500\n\n\nOffshore\n0-10m\nDay\n23.505000\n5.48900\n\n\nOffshore\n0-10m\nDay\n21.040000\n5.74800\n\n\nOffshore\n0-10m\nDay\n23.750000\n5.61800\n\n\nOffshore\n0-10m\nNight\n22.025000\n5.64900\n\n\nOffshore\n0-10m\nNight\n23.725000\n5.56400\n\n\nOffshore\n0-10m\nNight\n22.525000\n5.21400\n\n\nOffshore\n0-10m\nDay\n21.275000\n5.28900\n\n\nOffshore\n0-10m\nDay\n21.715000\n5.47700\n\n\nOffshore\n0-10m\nDay\n23.400000\n5.96100\n\n\nOffshore\n0-10m\nNight\n23.860000\n5.23900\n\n\nOffshore\n10-20m\nNight\n21.394000\n7.29500\n\n\nOffshore\n10-20m\nNight\n20.221500\n6.88750\n\n\nOffshore\n10-20m\nDay\n19.901000\n7.71000\n\n\nOffshore\n10-20m\nDay\n21.406000\n7.25250\n\n\nOffshore\n10-20m\nDay\n21.072500\n7.60500\n\n\nOffshore\n10-20m\nNight\n21.084500\n7.62750\n\n\nOffshore\n10-20m\nNight\n21.287500\n6.91250\n\n\nOffshore\n10-20m\nNight\n22.256000\n6.91250\n\n\nOffshore\n10-20m\nDay\n21.499500\n7.36750\n\n\nOffshore\n10-20m\nDay\n22.042000\n7.36750\n\n\nOffshore\n10-20m\nDay\n22.364500\n7.62000\n\n\nOffshore\n10-20m\nNight\n20.435500\n7.27750\n\n\nOffshore\n20-30m\nNight\n21.180000\n10.57950\n\n\nOffshore\n20-30m\nNight\n21.785000\n10.21950\n\n\nOffshore\n20-30m\nDay\n20.525000\n10.62250\n\n\nOffshore\n20-30m\nDay\n20.940000\n10.76850\n\n\nOffshore\n20-30m\nDay\n20.970000\n10.59900\n\n\nOffshore\n20-30m\nNight\n22.305000\n10.49550\n\n\nOffshore\n20-30m\nNight\n20.967500\n10.43150\n\n\nOffshore\n20-30m\nNight\n20.762500\n11.27800\n\n\nOffshore\n20-30m\nDay\n20.217500\n10.85350\n\n\nOffshore\n20-30m\nDay\n21.792500\n10.49500\n\n\nOffshore\n20-30m\nDay\n20.945000\n10.76800\n\n\nOffshore\n20-30m\nNight\n20.967500\n10.85300\n\n\nOffshore\n30-50m\nNight\n15.362500\n7.76275\n\n\nOffshore\n30-50m\nNight\n15.385000\n7.08750\n\n\nOffshore\n30-50m\nDay\n14.980000\n8.05425\n\n\nOffshore\n30-50m\nDay\n15.255000\n7.38575\n\n\nOffshore\n30-50m\nDay\n15.405000\n7.82475\n\n\nOffshore\n30-50m\nNight\n15.600000\n7.48400\n\n\nOffshore\n30-50m\nNight\n15.657500\n7.59550\n\n\nOffshore\n30-50m\nNight\n14.677500\n7.33825\n\n\nOffshore\n30-50m\nDay\n16.055000\n7.39700\n\n\nOffshore\n30-50m\nDay\n15.212500\n7.89975\n\n\nOffshore\n30-50m\nDay\n14.730000\n7.15600\n\n\nOffshore\n30-50m\nNight\n15.355000\n7.61550\n\n\nOffshore\n50-100m\nNight\n10.829300\n0.09450\n\n\nOffshore\n50-100m\nNight\n10.810900\n0.09030\n\n\nOffshore\n50-100m\nDay\n10.624300\n0.09200\n\n\nOffshore\n50-100m\nDay\n10.490500\n0.08980\n\n\nOffshore\n50-100m\nDay\n10.540900\n0.09030\n\n\nOffshore\n50-100m\nNight\n10.646700\n0.09200\n\n\nOffshore\n50-100m\nNight\n10.493000\n0.09600\n\n\nOffshore\n50-100m\nNight\n10.723500\n0.09180\n\n\nOffshore\n50-100m\nDay\n10.626400\n0.08960\n\n\nOffshore\n50-100m\nDay\n10.223800\n0.08490\n\n\nOffshore\n50-100m\nDay\n10.535400\n0.08800\n\n\nOffshore\n50-100m\nNight\n10.435400\n0.08480\n\n\nOffshore\n100-200m\nNight\n8.499952\n0.00000\n\n\nOffshore\n100-200m\nNight\n8.622095\n0.00000\n\n\nOffshore\n100-200m\nDay\n8.612476\n0.00000\n\n\nOffshore\n100-200m\nDay\n8.548143\n0.00000\n\n\nOffshore\n100-200m\nDay\n8.415190\n0.00000\n\n\nOffshore\n100-200m\nNight\n8.285333\n0.00000\n\n\nOffshore\n100-200m\nNight\n8.276095\n0.00000\n\n\nOffshore\n100-200m\nNight\n8.229333\n0.00000\n\n\nOffshore\n100-200m\nDay\n8.665857\n0.00000\n\n\nOffshore\n100-200m\nDay\n8.415905\n0.00000\n\n\nOffshore\n100-200m\nDay\n8.538048\n0.00000\n\n\nOffshore\n100-200m\nNight\n8.481333\n0.00000"
  },
  {
    "objectID": "Capstone Analysis/index.html#computing-sd-from-raw-ctd-using-raw-environmental-csvs",
    "href": "Capstone Analysis/index.html#computing-sd-from-raw-ctd-using-raw-environmental-csvs",
    "title": "Diel Vertical Migration Analysis Tutorial",
    "section": "5.2 Computing SD from Raw CTD (using raw environmental CSVs)",
    "text": "5.2 Computing SD from Raw CTD (using raw environmental CSVs)\nBelow, we replace the previous SD calculation with code that reads the four raw CTD CSVs directly, computes means and SDs for (Temp) and (Fluoro) by station, depth range, and period.\n\n# Helper function: read a CTD file, rename Depth if necessary, and tag station/type\nread_ctd &lt;- function(filename, station, type) {\n  df &lt;- read.csv(filename, stringsAsFactors = FALSE)\n  # If 'Depth..m.' column exists, rename it to 'Depth'\n  if (\"Depth..m.\" %in% names(df)) {\n    df &lt;- df %&gt;% rename(Depth = \"Depth..m.\")\n  }\n  # Remove leading 'X' from time column names\n  names(df) &lt;- sub(\"^X\", \"\", names(df))\n  # Add Station and Type columns\n  df &lt;- df %&gt;% mutate(Station = station, Type = type)\n  return(df)\n}\n\n# Read and label Temperature CSVs\nctd_temp_in  &lt;- read_ctd(\"../capstone_data/inshore_temp.csv\",  station = \"Inshore\",  type = \"Temp\")\nctd_temp_out &lt;- read_ctd(\"../capstone_data/offshore_temp.csv\", station = \"Offshore\", type = \"Temp\")\n\n# Read and label Fluorescence CSVs\nctd_flu_in  &lt;- read_ctd(\"../capstone_data/inshore_fluoro.csv\",  station = \"Inshore\",  type = \"Fluoro\")\nctd_flu_out &lt;- read_ctd(\"../capstone_data/offshore_fluoro.csv\", station = \"Offshore\", type = \"Fluoro\")\n\n# Combine all CTD reads\nctd_all &lt;- bind_rows(ctd_temp_in, ctd_temp_out, ctd_flu_in, ctd_flu_out)\n\n# Reshape from wide to long; then back to wide so we have Temp and Fluoro in columns\nctd_long &lt;- ctd_all %&gt;%\n  pivot_longer(\n    cols = -c(Depth, Station, Type),\n    names_to = \"time\",\n    values_to = \"Value\"\n  ) %&gt;%\n  pivot_wider(\n    id_cols   = c(Depth, Station, time),\n    names_from = Type,\n    values_from = Value\n  )\n\n# 5.2.1 Create 'period' (Day vs Night) and 'DepthRange' bins\nctd_long &lt;- ctd_long %&gt;%\n  mutate(\n    # Extract integer hour from time string (e.g., \"00H00\" -&gt; 0)\n    hour = as.integer(sub(\"H.*\", \"\", time)),\n    period = ifelse(hour &gt;= 18 | hour &lt; 6, \"Night\", \"Day\"),\n    # Bin absolute Depth into ranges matching our biological DepthRange\n    DepthRange = cut(\n      abs(Depth),\n      breaks = c(0, 10, 20, 30, 50, 100, 200),\n      labels = c(\"0-10m\", \"10-20m\", \"20-30m\", \"30-50m\", \"50-100m\", \"100-200m\"),\n      include.lowest = TRUE\n    ),\n    Station = factor(Station, levels = c(\"Inshore\", \"Offshore\"))\n  ) %&gt;%\n  filter(!is.na(Temp) & !is.na(Fluoro) & !is.na(DepthRange))\n\n# 5.2.2 Compute mean and SD for each Station, DepthRange, period\nenv_summary_raw &lt;- ctd_long %&gt;%\n  group_by(Station, DepthRange, period) %&gt;%\n  summarise(\n    mean_temp   = mean(Temp,   na.rm = TRUE),\n    sd_temp     = sd(Temp,     na.rm = TRUE),\n    mean_fluoro = mean(Fluoro, na.rm = TRUE),\n    sd_fluoro   = sd(Fluoro,   na.rm = TRUE)\n  ) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'Station', 'DepthRange'. You can override\nusing the `.groups` argument.\n\n# Display the final summary table\nenv_summary_raw %&gt;%\n  arrange(Station, DepthRange, period) %&gt;%\n  kable(caption = \"Mean ± SD of Temperature and Fluorescence by station, depth range, and period\")\n\n\nMean ± SD of Temperature and Fluorescence by station, depth range, and period\n\n\n\n\n\n\n\n\n\n\n\nStation\nDepthRange\nperiod\nmean_temp\nsd_temp\nmean_fluoro\nsd_fluoro\n\n\n\n\nInshore\n0-10m\nDay\n16.721667\n1.2400652\n124.011111\n10.8073348\n\n\nInshore\n0-10m\nNight\n16.716667\n1.1178577\n123.846167\n10.9798485\n\n\nInshore\n10-20m\nDay\n12.880667\n0.7940077\n46.310417\n34.3428699\n\n\nInshore\n10-20m\nNight\n12.411167\n0.9050941\n46.569167\n34.0542225\n\n\nInshore\n20-30m\nDay\n10.555000\n0.6481265\n8.043417\n2.8994130\n\n\nInshore\n20-30m\nNight\n10.594333\n0.6303650\n8.141833\n2.6975985\n\n\nInshore\n30-50m\nDay\n9.328042\n0.7260339\n2.521208\n1.4695666\n\n\nInshore\n30-50m\nNight\n9.416917\n0.8777805\n2.482792\n1.4136338\n\n\nInshore\n50-100m\nDay\n7.573967\n0.5414758\n0.080300\n0.2113089\n\n\nInshore\n50-100m\nNight\n7.535817\n0.5466669\n0.078500\n0.2071077\n\n\nInshore\n100-200m\nDay\n6.747722\n0.4314608\n0.000000\n0.0000000\n\n\nInshore\n100-200m\nNight\n6.681611\n0.3915796\n0.000000\n0.0000000\n\n\nOffshore\n0-10m\nDay\n22.036111\n1.5197383\n5.944944\n0.7760115\n\n\nOffshore\n0-10m\nNight\n22.500278\n1.6382653\n5.799722\n0.6663316\n\n\nOffshore\n10-20m\nDay\n21.046750\n1.3887838\n8.352917\n0.4342154\n\n\nOffshore\n10-20m\nNight\n21.762750\n0.9309559\n8.317500\n0.6284523\n\n\nOffshore\n20-30m\nDay\n19.730000\n1.7974970\n15.732750\n2.9955643\n\n\nOffshore\n20-30m\nNight\n19.748750\n1.2818295\n15.237833\n2.9607189\n\n\nOffshore\n30-50m\nDay\n13.757292\n1.5323093\n3.102792\n3.1563303\n\n\nOffshore\n30-50m\nNight\n13.576458\n1.2403712\n3.099000\n3.1766870\n\n\nOffshore\n50-100m\nDay\n10.191683\n1.0452900\n0.048900\n0.0796247\n\n\nOffshore\n50-100m\nNight\n10.360967\n1.1167925\n0.049700\n0.0812993\n\n\nOffshore\n100-200m\nDay\n8.509542\n0.8165192\n0.000000\n0.0000000\n\n\nOffshore\n100-200m\nNight\n8.367767\n0.7264852\n0.000000\n0.0000000"
  },
  {
    "objectID": "Capstone Analysis/index.html#stage-density-summary",
    "href": "Capstone Analysis/index.html#stage-density-summary",
    "title": "Diel Vertical Migration Analysis Tutorial",
    "section": "5.3 Stage Density Summary",
    "text": "5.3 Stage Density Summary\nCompute means of adult and furcilia IV–VI densities by station, depth range, and period.\n\n# Mean density (ind/m^3) for adults and furcilia IV-VI by station, depth range, and period\ndens_summary &lt;- capstone_df %&gt;%\n  group_by(Station, DepthRange, period) %&gt;%\n  summarise(\n    mean_adult = mean(adult_dens, na.rm = TRUE),\n    mean_fur4_6 = mean(fur4_6_dens, na.rm = TRUE)\n  ) %&gt;%\n  ungroup()\n\nkable(dens_summary,\n      caption = \"Mean density (ind/m^3) for adults and furcilia IV-VI by station, depth range, and period.\")\n\n\nMean density (ind/m^3) for adults and furcilia IV-VI by station, depth range, and period.\n\n\nStation\nDepthRange\nperiod\nmean_adult\nmean_fur4_6\n\n\n\n\nInshore\n0-10m\nDay\n0.9348368\n3.993479\n\n\nInshore\n0-10m\nNight\n26.8052743\n30.781489\n\n\nInshore\n10-20m\nDay\n2.7176582\n8.895574\n\n\nInshore\n10-20m\nNight\n5.9181235\n11.132683\n\n\nInshore\n20-30m\nDay\n4.7098373\n15.456565\n\n\nInshore\n20-30m\nNight\n1.5646936\n5.020306\n\n\nInshore\n30-50m\nDay\n10.7117778\n20.251714\n\n\nInshore\n30-50m\nNight\n1.0006724\n0.000000\n\n\nInshore\n50-100m\nDay\n7.0052728\n4.612749\n\n\nInshore\n50-100m\nNight\n0.5752658\n0.000000\n\n\nInshore\n100-200m\nDay\n8.2792470\n0.000000\n\n\nInshore\n100-200m\nNight\n0.2243435\n0.000000\n\n\nOffshore\n0-10m\nDay\n2.1651807\n2.392353\n\n\nOffshore\n0-10m\nNight\n2.8215053\n2.360992\n\n\nOffshore\n10-20m\nDay\n8.9865447\n4.356231\n\n\nOffshore\n10-20m\nNight\n11.2136805\n4.387726\n\n\nOffshore\n20-30m\nDay\n20.6084493\n9.784314\n\n\nOffshore\n20-30m\nNight\n25.8995360\n12.869131\n\n\nOffshore\n30-50m\nDay\n19.1771173\n11.431988\n\n\nOffshore\n30-50m\nNight\n16.4741630\n9.718606\n\n\nOffshore\n50-100m\nDay\n4.5649798\n3.838030\n\n\nOffshore\n50-100m\nNight\n2.6731683\n2.489511\n\n\nOffshore\n100-200m\nDay\n5.4371805\n0.000000\n\n\nOffshore\n100-200m\nNight\n1.4382205\n0.000000"
  },
  {
    "objectID": "Capstone Analysis/index.html#temperature-and-fluorescence-profiles",
    "href": "Capstone Analysis/index.html#temperature-and-fluorescence-profiles",
    "title": "Diel Vertical Migration Analysis Tutorial",
    "section": "6.1 Temperature and Fluorescence Profiles",
    "text": "6.1 Temperature and Fluorescence Profiles\nWe generate four panels: temperature vs. depth and fluorescence vs. depth for each station, colored by period. Use the merged summary for error bars:\n\np1 &lt;- ggplot(env_summary_raw, aes(x = mean_temp, y = DepthRange, color = period, group = period)) +\n  geom_line(linewidth = 0.8, position = position_dodge(width = 0.5)) +\n  geom_point(position = position_dodge(width = 0.5)) +\n  geom_errorbarh(aes(xmin = mean_temp - sd_temp, xmax = mean_temp + sd_temp),\n                 position = position_dodge(width = 0.5), height = 0.2) +\n  facet_wrap(~ Station) +\n  scale_y_discrete(limits = rev(levels(env_summary_raw$DepthRange))) +\n  scale_x_continuous(position = \"top\") +\n  scale_color_manual(values = c(\"gray\", \"black\")) +\n  labs(x = \"Temperature (°C)\", y = \"Depth Range\", color = \"Time of day\") +\n  theme_minimal() +\n  theme(panel.grid = element_blank())\n\np2 &lt;- ggplot(env_summary_raw, aes(x = mean_fluoro, y = DepthRange, color = period, group = period)) +\n  geom_line(linewidth = 0.8, position = position_dodge(width = 0.5)) +\n  geom_point(position = position_dodge(width = 0.5)) +\n  geom_errorbarh(aes(xmin = mean_fluoro - sd_fluoro, xmax = mean_fluoro + sd_fluoro),\n                 position = position_dodge(width = 0.5), height = 0.2) +\n  facet_wrap(~ Station) +\n  scale_y_discrete(limits = rev(levels(env_summary_raw$DepthRange))) +\n  scale_x_continuous(position = \"top\") +\n  scale_color_manual(values = c(\"gray\", \"black\")) +\n  labs(x = \"Fluorescence (rel units)\", y = \"Depth Range\", color = \"Time of day\") +\n  theme_minimal() +\n  theme(panel.grid = element_blank())\n\n# Display\np1\n\n\n\n\n\n\n\np2"
  },
  {
    "objectID": "Capstone Analysis/index.html#adult-abundance-profiles",
    "href": "Capstone Analysis/index.html#adult-abundance-profiles",
    "title": "Diel Vertical Migration Analysis Tutorial",
    "section": "6.2 Adult Abundance Profiles",
    "text": "6.2 Adult Abundance Profiles\nBelow are two plots for adult abundance only:\n\nBar Graph showing mean ± SE per depth, grouped by period and faceted by station.\nPoint Graph showing mean ± SE per depth, with points and horizontal error bars.\n\n\n# Summarize mean and SE of adult density by Station, period, and DepthMin\nadult_sum &lt;- capstone_df %&gt;%\n  group_by(Station, period, DepthMin) %&gt;%\n  summarise(\n    mean_adult = mean(adult_dens, na.rm = TRUE),\n    se_adult   = sd(adult_dens, na.rm = TRUE)/sqrt(n())\n  ) %&gt;%\n  ungroup()\n\n# Ensure Station is a factor and DepthMin is numeric\nadult_sum$Station &lt;- factor(adult_sum$Station, levels = c(\"Inshore\", \"Offshore\"))\nadult_sum$DepthMin &lt;- as.numeric(adult_sum$DepthMin)\n\n# 1. Bar Graph: Mean ± SE, horizontal bars, faceted by Station\np3 &lt;- ggplot(adult_sum, aes(x = mean_adult, y = DepthMin, fill = period)) +\n  geom_col(position = position_dodge(width = 5), width = 0.8, color = \"black\") +\n  geom_errorbarh(aes(xmin = mean_adult - se_adult, xmax = mean_adult + se_adult),\n                 position = position_dodge(width = 5), height = 2, color = \"black\") +\n  facet_wrap(~ Station) +\n  scale_y_reverse() +\n  scale_fill_manual(values = c(\"Day\" = \"gray90\", \"Night\" = \"gray50\")) +\n  labs(x = \"Mean adult abundance (ind/m^3)\", y = \"Depth (m)\", fill = \"Time of day\") +\n  theme_minimal() +\n  theme(panel.grid = element_blank())\n\np3\n\n\n\n\n\n\n\n# 2. Point Graph: Points with error bars, faceted by Station\np4 &lt;- ggplot(adult_sum, aes(x = mean_adult, y = DepthMin, color = period)) +\n  geom_point(position = position_dodge(width = 2), size = 3) +\n  geom_errorbarh(aes(xmin = mean_adult - se_adult, xmax = mean_adult + se_adult),\n                 position = position_dodge(width = 2), height = 1, color = \"black\") +\n  facet_wrap(~ Station) +\n  scale_y_reverse() +\n  scale_color_manual(values = c(\"Day\" = \"gray90\", \"Night\" = \"gray50\")) +\n  labs(x = \"Mean adult abundance (ind/m^3)\", y = \"Depth (m)\", color = \"Time of day\") +\n  theme_minimal() +\n  theme(panel.grid = element_blank())\n\np4"
  },
  {
    "objectID": "Capstone Analysis/index.html#life-stage-abundance-bar-plots",
    "href": "Capstone Analysis/index.html#life-stage-abundance-bar-plots",
    "title": "Diel Vertical Migration Analysis Tutorial",
    "section": "6.3 Life-Stage Abundance Bar Plots",
    "text": "6.3 Life-Stage Abundance Bar Plots\nBelow we create mirrored horizontal bar plots so that “Day” abundance values extend to the left (negative axis) and “Night” values extend to the right (positive axis). We facet by Station (rows) and LifeStage (columns), and reverse the y-axis so that greater depths appear lower on the page.\n\n# Summarize mean and standard error of density by Station, period, DepthMin, and LifeStage\n# and then assign negative values for Day to achieve a mirrored bar chart.\ndf_sum &lt;- capstone_df %&gt;%\n  pivot_longer(\n    cols = c(egg_dens, cypris_dens, fur1_3_dens, fur4_6_dens, adult_dens),\n    names_to  = \"LifeStage\",\n    values_to = \"Density\"\n  ) %&gt;%\n  mutate(\n    LifeStage = case_when(\n      LifeStage == \"egg_dens\"    ~ \"Eggs\",\n      LifeStage == \"cypris_dens\" ~ \"Cypris\",\n      LifeStage == \"fur1_3_dens\" ~ \"Furcilia I-III\",\n      LifeStage == \"fur4_6_dens\" ~ \"Furcilia IV-VI\",\n      LifeStage == \"adult_dens\"   ~ \"Adults\"\n    )\n  ) %&gt;%\n  group_by(Station, period, DepthMin, LifeStage) %&gt;%\n  summarise(\n    mean_den = mean(Density, na.rm = TRUE),\n    se_den   = sd(Density, na.rm = TRUE) / sqrt(n())\n  ) %&gt;%\n  ungroup() %&gt;%\n  # Assign negative values to \"Day\" so that day bars extend leftwards\n  mutate(\n    Abundance = ifelse(period == \"Day\", -mean_den, mean_den)\n  )\n\n# Factor ordering for LifeStage and Station\ndf_sum$LifeStage &lt;- factor(df_sum$LifeStage,\n                           levels = c(\"Eggs\", \"Cypris\", \"Furcilia I-III\", \"Furcilia IV-VI\", \"Adults\"))\ndf_sum$Station   &lt;- factor(df_sum$Station, levels = c(\"Inshore\", \"Offshore\"))\n\n# Create mirrored bar plot\np5 &lt;- ggplot(df_sum, aes(x = Abundance, y = as.factor(DepthMin), fill = period)) +\n  geom_col(width = 1, color = \"black\") +\n  geom_errorbarh(aes(xmin = Abundance - se_den, xmax = Abundance + se_den),\n                 height = 0.8, color = \"black\") +\n  facet_grid(Station ~ LifeStage, scales = \"free_x\") +\n  # Use absolute values for x-axis labels\n  scale_x_continuous(labels = function(x) abs(x)) +\n  # Reverse y-axis so deeper depths plot lower\n  scale_y_discrete(limits = rev(unique(as.factor(df_sum$DepthMin))),\n                   labels = function(x) paste(x, \"m\")) +\n  scale_fill_manual(values = c(\"Day\" = \"gray90\", \"Night\" = \"gray50\")) +\n  labs(x = \"Mean abundance (ind/m^3)\", y = \"Depth (m)\") +\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank(),\n    strip.text = element_text(face = \"bold\"),\n    axis.text.y = element_text(margin = margin(r = 4))\n  )\n\np5"
  }
]