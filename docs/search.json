[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Les Codex",
    "section": "",
    "text": "Les Codex is a collection of tutorials written by Phemelo-R for learners of R, Python, statistics, and scientific computing."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to Les Codex",
    "section": "",
    "text": "Welcome to Les Codex — a digital companion for those beginning, refining, or critically engaging with R and machine learning. This site serves as both a structured archive and a dynamic learning space. At its core, it offers a gradual yet rigorous introduction to statistical programming with R, foregrounding practical applications without neglecting conceptual clarity.\nThe content is organised to ease transitions between foundational concepts and advanced topics. Beginners will find scaffolding for essential syntax, data structures, and plotting. As you progress, you’ll encounter materials that draw from quantitative ecology, biostatistics, and machine learning — areas that demand both algorithmic precision and epistemic care.\nThis is not a passive repository of tutorials. It is intended to sharpen your sense of inquiry, to cultivate a habit of testing assumptions, and to familiarise you with tools that distinguish signal from noise. You are encouraged to move back and forth between the sections, treat examples as modifiable experiments, and reflect critically on how code interacts with data and method.\n\n\n\n\nLiteracy in R: By engaging with the early modules, you will learn the grammar of R, how to write clean and purposeful code, and how to structure analyses in a reproducible manner.\nAnalytical Thinking: Through exposure to worked examples, simulation models, and applied problems, you’ll build an instinct for structured inference and statistical reasoning.\nPathway to Machine Learning: The later stages of the site introduce supervised and unsupervised learning using tidymodels, with emphasis on interpretability and model evaluation rather than hype.\nScientific Integrity: Beyond technical fluency, the material aims to nurture a disposition attentive to scale, uncertainty, and the philosophical dimensions of modelling.\n\nThis site is maintained as a living document. Contributions, criticisms, and alternative approaches are welcome — the goal is not completeness, but clarity and seriousness.\n\nLes Codex is for the reader who values careful work, conceptual grounding, and practical experimentation. It is not a fast track — it is a foundation.\n\n\n\nCreated with 💻 by Phemelo Rutlokoane"
  },
  {
    "objectID": "index.html#a-hub-for-data-science-and-machine-learning",
    "href": "index.html#a-hub-for-data-science-and-machine-learning",
    "title": "Les Codex",
    "section": "",
    "text": "Les Codex is a growing collection of tutorials, notebooks, and annotated code focused on R, Python, Biostatistics, and Reproducible Data Science. This is the place where you’ll learn the latest techniques in machine learning, statistics, and data analysis, all in a clean, well-documented format."
  },
  {
    "objectID": "index.html#machine-learning-tutorials",
    "href": "index.html#machine-learning-tutorials",
    "title": "Welcome to Les Codex",
    "section": "Machine Learning Tutorials",
    "text": "Machine Learning Tutorials\nDiscover the world of machine learning through practical tutorials and real-life examples. Whether you’re a beginner or looking to deepen your knowledge, you’ll find insightful content here.\n\nIntroduction to Machine Learning with R\nBuilding Neural Networks in Python\nHands-on with TensorFlow"
  },
  {
    "objectID": "index.html#explore-r-and-python-tutorials",
    "href": "index.html#explore-r-and-python-tutorials",
    "title": "Welcome to Les Codex",
    "section": "Explore R and Python Tutorials",
    "text": "Explore R and Python Tutorials\nGet hands-on with data analysis and machine learning in both R and Python.\n\nR Tutorials\nPython Tutorials\n\n\n\n\nCreated with 💻 by Phemelo Rutlokoane"
  },
  {
    "objectID": "index.html#about-les-codex",
    "href": "index.html#about-les-codex",
    "title": "Welcome to Les Codex",
    "section": "",
    "text": "Welcome to Les Codex — a digital companion for those beginning, refining, or critically engaging with R and machine learning. This site serves as both a structured archive and a dynamic learning space. At its core, it offers a gradual yet rigorous introduction to statistical programming with R, foregrounding practical applications without neglecting conceptual clarity.\nThe content is organised to ease transitions between foundational concepts and advanced topics. Beginners will find scaffolding for essential syntax, data structures, and plotting. As you progress, you’ll encounter materials that draw from quantitative ecology, biostatistics, and machine learning — areas that demand both algorithmic precision and epistemic care.\nThis is not a passive repository of tutorials. It is intended to sharpen your sense of inquiry, to cultivate a habit of testing assumptions, and to familiarise you with tools that distinguish signal from noise. You are encouraged to move back and forth between the sections, treat examples as modifiable experiments, and reflect critically on how code interacts with data and method.\n\n\n\n\nLiteracy in R: By engaging with the early modules, you will learn the grammar of R, how to write clean and purposeful code, and how to structure analyses in a reproducible manner.\nAnalytical Thinking: Through exposure to worked examples, simulation models, and applied problems, you’ll build an instinct for structured inference and statistical reasoning.\nPathway to Machine Learning: The later stages of the site introduce supervised and unsupervised learning using tidymodels, with emphasis on interpretability and model evaluation rather than hype.\nScientific Integrity: Beyond technical fluency, the material aims to nurture a disposition attentive to scale, uncertainty, and the philosophical dimensions of modelling.\n\nThis site is maintained as a living document. Contributions, criticisms, and alternative approaches are welcome — the goal is not completeness, but clarity and seriousness.\n\nLes Codex is for the reader who values careful work, conceptual grounding, and practical experimentation. It is not a fast track — it is a foundation."
  },
  {
    "objectID": "Introduction to R/index.html",
    "href": "Introduction to R/index.html",
    "title": "Introduction to R",
    "section": "",
    "text": "This section provides an overview of R and RStudio, and directs you to two core subtopics:\n\nR Basics — fundamental functions, built-in datasets, and data exploration.\nR Packages — installing and using essential data science packages.\n\n\n\nR is a language and environment for statistical computing and graphics. Developed by Ross Ihaka and Robert Gentleman at the University of Auckland, R has grown into an open-source project maintained by the R Core Team. It excels in data manipulation, statistical modelling, and rich visualizations.\n\n\n\nRStudio is an integrated development environment (IDE) for R. Created by JJ Allaire and the RStudio team, it provides a user-friendly interface with syntax highlighting, code completion, and tools for plotting, history, and workspace management.\n\n\n\n\nOpen Source: Free to use and extend.\nCommunity: A vast ecosystem of packages (CRAN, Bioconductor).\nFlexibility: From basic statistics to advanced machine learning and data science.\nReproducibility: Integrates with R Markdown and Quarto for reproducible reports.\n\n\n\n\n\n\n\nDownload R: https://cran.r-project.org/bin/windows/base/\n\nRun the installer and follow the prompts.\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nDownload R: https://cran.r-project.org/bin/macosx/\n\nInstall the .pkg file.\n\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nFollow your distribution’s instructions: https://cran.r-project.org/bin/linux/\n\nInstall via package manager (e.g., sudo apt install r-base).\n\nDownload and install RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\n\n\n\n\n\n\nRStudio’s default layout consists of four key panes arranged in a 2x2 grid. You can customise this arrangement via View → Panes → Pane Layout.\n\nSource Editor (Top-Left)\n\nContains your script or Quarto document.\nFeatures line numbering, syntax highlighting, and code folding (collapse/expand blocks).\nUse Ctrl+Shift+N (Windows/Linux) or Cmd+Shift+N (macOS) to create a new script.\n\nConsole (Bottom-Left)\n\nExecutes R commands interactively.\nShows directly evaluated expressions and error messages.\nYou can run selected code from the Source with Ctrl+Enter or Cmd+Enter.\n\nEnvironment/History (Top-Right)\n\nEnvironment tab lists current objects: variables, data frames, functions.\nHistory tab records all commands you’ve executed in the console.\nClick the broom icon in Environment to clear workspace.\n\nFiles/Plots/Packages/Help/Viewer (Bottom-Right)\n\nFiles: Browse project files; open by double-clicking.\nPlots: Shows generated graphs; use arrows to navigate past plots.\nPackages: Install, update, and load packages with checkboxes.\nHelp: Access documentation for functions and packages; search by term.\nViewer: Renders HTML outputs, such as Quarto previews or shiny apps.\n\n\n\n\n\n\n\n\nThemes: Change editor theme under Tools → Global Options → Appearance. Options include light (TextMate, Solarized Light) and dark (Cobalt, Monokai).\nPane Layout: Move panes around under View → Panes → Pane Layout…; drag and swap quadrants.\nCode Completion: Ensure Enable code completion is ticked in Global Options → Code → Completion.\nAdd-Ons:\n\nGit/GitHub: Integrate under Global Options → Git/SVN; enable version control for your project.\nAI Assistants: Use extensions like GitHub Copilot for RMarkdown via Tools → Addins."
  },
  {
    "objectID": "index.html#about-les-codex-1",
    "href": "index.html#about-les-codex-1",
    "title": "Welcome to Les Codex",
    "section": "About Les Codex",
    "text": "About Les Codex\nThis platform is dedicated to bringing clarity and accessibility to the complex world of data science, empowering you with the skills you need to tackle real-world challenges.\n\n\n\nCreated with 💻 by Phemelo Rutlokoane"
  },
  {
    "objectID": "index.html#les-codex",
    "href": "index.html#les-codex",
    "title": "Welcome to Les Codex",
    "section": "",
    "text": "Welcome to Les Codex — a digital companion for those beginning, refining, or critically engaging with R and machine learning. This site serves as both a structured archive and a dynamic learning space. At its core, it offers a gradual yet rigorous introduction to statistical programming with R, foregrounding practical applications without neglecting conceptual clarity.\nThe content is organised to ease transitions between foundational concepts and advanced topics. Beginners will find scaffolding for essential syntax, data structures, and plotting. As you progress, you’ll encounter materials that draw from quantitative ecology, biostatistics, and machine learning — areas that demand both algorithmic precision and epistemic care.\nThis is not a passive repository of tutorials. It is intended to sharpen your sense of inquiry, to cultivate a habit of testing assumptions, and to familiarise you with tools that distinguish signal from noise. You are encouraged to move back and forth between the sections, treat examples as modifiable experiments, and reflect critically on how code interacts with data and method.\n\n\n\n\nLiteracy in R: By engaging with the early modules, you will learn the grammar of R, how to write clean and purposeful code, and how to structure analyses in a reproducible manner.\nAnalytical Thinking: Through exposure to worked examples, simulation models, and applied problems, you’ll build an instinct for structured inference and statistical reasoning.\nPathway to Machine Learning: The later stages of the site introduce supervised and unsupervised learning using tidymodels, with emphasis on interpretability and model evaluation rather than hype.\nScientific Integrity: Beyond technical fluency, the material aims to nurture a disposition attentive to scale, uncertainty, and the philosophical dimensions of modelling.\n\nThis site is maintained as a living document. Contributions, criticisms, and alternative approaches are welcome — the goal is not completeness, but clarity and seriousness.\n\nLes Codex is for the reader who values careful work, conceptual grounding, and practical experimentation. It is not a fast track — it is a foundation.\n\n\n\nCreated with 💻 by Phemelo Rutlokoane"
  },
  {
    "objectID": "Introduction to R/index.html#what-is-r",
    "href": "Introduction to R/index.html#what-is-r",
    "title": "Introduction to R",
    "section": "",
    "text": "R is a language and environment for statistical computing and graphics. Developed by Ross Ihaka and Robert Gentleman at the University of Auckland, R has grown into an open-source project maintained by the R Core Team. It excels in data manipulation, statistical modelling, and rich visualizations."
  },
  {
    "objectID": "Introduction to R/index.html#what-is-rstudio",
    "href": "Introduction to R/index.html#what-is-rstudio",
    "title": "Introduction to R",
    "section": "",
    "text": "RStudio is an integrated development environment (IDE) for R. Created by JJ Allaire and the RStudio team, it provides a user-friendly interface with syntax highlighting, code completion, and tools for plotting, history, and workspace management."
  },
  {
    "objectID": "Introduction to R/index.html#why-use-r",
    "href": "Introduction to R/index.html#why-use-r",
    "title": "Introduction to R",
    "section": "",
    "text": "Open Source: Free to use and extend.\nCommunity: A vast ecosystem of packages (CRAN, Bioconductor).\nFlexibility: From basic statistics to advanced machine learning and data science.\nReproducibility: Integrates with R Markdown and Quarto for reproducible reports."
  },
  {
    "objectID": "Introduction to R/index.html#installation",
    "href": "Introduction to R/index.html#installation",
    "title": "Introduction to R",
    "section": "",
    "text": "Download R: https://cran.r-project.org/bin/windows/base/\n\nRun the installer and follow the prompts.\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nDownload R: https://cran.r-project.org/bin/macosx/\n\nInstall the .pkg file.\n\nDownload RStudio Desktop: https://posit.co/download/rstudio-desktop/\n\nInstall RStudio.\n\n\n\n\n\nFollow your distribution’s instructions: https://cran.r-project.org/bin/linux/\n\nInstall via package manager (e.g., sudo apt install r-base).\n\nDownload and install RStudio Desktop: https://posit.co/download/rstudio-desktop/"
  },
  {
    "objectID": "Introduction to R/index.html#getting-started-with-rstudio",
    "href": "Introduction to R/index.html#getting-started-with-rstudio",
    "title": "Introduction to R",
    "section": "",
    "text": "RStudio’s default layout consists of four key panes arranged in a 2x2 grid. You can customise this arrangement via View → Panes → Pane Layout.\n\nSource Editor (Top-Left)\n\nContains your script or Quarto document.\nFeatures line numbering, syntax highlighting, and code folding (collapse/expand blocks).\nUse Ctrl+Shift+N (Windows/Linux) or Cmd+Shift+N (macOS) to create a new script.\n\nConsole (Bottom-Left)\n\nExecutes R commands interactively.\nShows directly evaluated expressions and error messages.\nYou can run selected code from the Source with Ctrl+Enter or Cmd+Enter.\n\nEnvironment/History (Top-Right)\n\nEnvironment tab lists current objects: variables, data frames, functions.\nHistory tab records all commands you’ve executed in the console.\nClick the broom icon in Environment to clear workspace.\n\nFiles/Plots/Packages/Help/Viewer (Bottom-Right)\n\nFiles: Browse project files; open by double-clicking.\nPlots: Shows generated graphs; use arrows to navigate past plots.\nPackages: Install, update, and load packages with checkboxes.\nHelp: Access documentation for functions and packages; search by term.\nViewer: Renders HTML outputs, such as Quarto previews or shiny apps."
  },
  {
    "objectID": "Introduction to R/index.html#customising-your-workspace",
    "href": "Introduction to R/index.html#customising-your-workspace",
    "title": "Introduction to R",
    "section": "",
    "text": "Themes: Change editor theme under Tools → Global Options → Appearance. Options include light (TextMate, Solarized Light) and dark (Cobalt, Monokai).\nPane Layout: Move panes around under View → Panes → Pane Layout…; drag and swap quadrants.\nCode Completion: Ensure Enable code completion is ticked in Global Options → Code → Completion.\nAdd-Ons:\n\nGit/GitHub: Integrate under Global Options → Git/SVN; enable version control for your project.\nAI Assistants: Use extensions like GitHub Copilot for RMarkdown via Tools → Addins."
  },
  {
    "objectID": "Introduction to R/packages.html",
    "href": "Introduction to R/packages.html",
    "title": "R Packages",
    "section": "",
    "text": "Packages in R are collections of functions, data, and compiled code that extend base R capabilities. We will cover installation, loading, essential package ecosystems, and practical examples.\n\n\n\n\nBefore installing, ensure you have a CRAN mirror set. When you first invoke install.packages(), R will prompt you to choose a mirror. Select one geographically close to you for speed.\n\n# Install core packages from CRAN \ninstall.packages(\"tidyverse\") # data manipulation & visualization\ninstall.packages(\"vegan\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"readr\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"sf\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"lubridate\") # date-time utilities \ninstall.packages(\"stringr\") # string manipulation \ninstall.packages(\"purrr\")\n\n\ninstall.packages(\"pkg\") downloads source or binary from CRAN and installs it into your library (use getwd() if you’re unsure where your default library is located).\nTo specify a mirror programmatically, we use: repos = “https://cloud.r-project.org”\n\n\n\n\n\nOnce installed, load a package with library() or require():\n\nlibrary(tidyverse)   # dplyr, ggplot2, tidyr, readr, purrr, etc.\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(vegan)       # community ecology tools\n\nLoading required package: permute\nLoading required package: lattice\n\nlibrary(readr)       # fast data import\nlibrary(sf)          # spatial data handling\n\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(lubridate)   # date-time parsing\nlibrary(stringr)     # string processing\nlibrary(purrr)       # functional pipelines\n\n\nlibrary(pkg, quietly = TRUE) loads without startup messages.\nconflicts() lists any masking of functions from different packages.\n\n\n\n\n\n\nA coherent suite designed for data science by Hadley Wickham and team: - dplyr: Data manipulation grammar (filter(), select(), mutate(), summarise(), arrange()). - ggplot2: Grammar of graphics for plotting. - tidyr: Tools to reshape (pivot_longer, pivot_wider). - readr: High-performance data import (read_csv, read_delim).\n\n\n\n# Import a CSV via readr\n# df &lt;- read_csv(\"path/to/file.csv\")\n\n# Using built-in iris dataset as tibble\ndf &lt;- as_tibble(iris)\n\n# Chain operations with dplyr\ndf_summary &lt;- df %&gt;%\n  filter(Sepal.Length &gt; 5) %&gt;%\n  group_by(Species) %&gt;%\n  summarise(\n    mean_sep = mean(Sepal.Length),\n    sd_sep   = sd(Sepal.Length),\n    count    = n()\n  )\n\n# Display summary\ndf_summary\n\n# A tibble: 3 × 4\n  Species    mean_sep sd_sep count\n  &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;\n1 setosa         5.31  0.223    22\n2 versicolor     6.00  0.467    47\n3 virginica      6.62  0.593    49\n\n# Create a scatter plot with ggplot2\nggplot(df, aes(x = Sepal.Length, y = Petal.Length, colour = Species)) +\n  geom_point(alpha = 0.7) +\n  labs(title = \"Sepal vs Petal Length by Species\")\n\n\n\n\n\n\n\n\n\n\n\n\nCommunity ecology and multivariate statistics: - diversity(x, index = \"shannon\"): Shannon diversity index. - metaMDS(x, distance = \"bray\"): Non-metric multidimensional scaling. - rda(x, y): Redundancy analysis (constrained ordination).\n\n\n\n# Load datasets\nlibrary(vegan)\ndata(dune)\ndata(dune.env)\n\n# Calculate Shannon diversity by site\ndiv_shannon &lt;- diversity(dune, index = \"shannon\")\nprint(div_shannon)\n\n       1        2        3        4        5        6        7        8 \n1.440482 2.252516 2.193749 2.426779 2.544421 2.345946 2.471733 2.434898 \n       9       10       11       12       13       14       15       16 \n2.493568 2.398613 2.106065 2.114495 2.099638 1.863680 1.979309 1.959795 \n      17       18       19       20 \n1.876274 2.079387 2.134024 2.048270 \n\n# Perform NMDS ordination\nnmds_res &lt;- metaMDS(dune, distance = \"bray\", k = 2)\n\nRun 0 stress 0.1192678 \nRun 1 stress 0.1192678 \n... Procrustes: rmse 2.760631e-05  max resid 7.918863e-05 \n... Similar to previous best\nRun 2 stress 0.1183186 \n... New best solution\n... Procrustes: rmse 0.02027082  max resid 0.06495998 \nRun 3 stress 0.1886532 \nRun 4 stress 0.1192678 \nRun 5 stress 0.1192678 \nRun 6 stress 0.192224 \nRun 7 stress 0.1192678 \nRun 8 stress 0.1809579 \nRun 9 stress 0.1192678 \nRun 10 stress 0.1192679 \nRun 11 stress 0.1192678 \nRun 12 stress 0.1192678 \nRun 13 stress 0.3770267 \nRun 14 stress 0.1192679 \nRun 15 stress 0.1808911 \nRun 16 stress 0.1183186 \n... Procrustes: rmse 8.295968e-06  max resid 2.447404e-05 \n... Similar to previous best\nRun 17 stress 0.1183186 \n... Procrustes: rmse 7.602898e-06  max resid 2.150183e-05 \n... Similar to previous best\nRun 18 stress 0.1192678 \nRun 19 stress 0.1192678 \nRun 20 stress 0.1812932 \n*** Best solution repeated 2 times\n\nplot(nmds_res, type = \"n\")\ntext(nmds_res, display = \"sites\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nsf: Simple features for spatial vector data. Use st_read() to import spatial files.\nlubridate: Simplifies date-time parsing (ymd(), hms()) and arithmetic.\nstringr: Consistent and user-friendly string manipulation (str_detect, str_replace).\npurrr: Functional programming tools to iterate (map, map_df).\n\n\n\n\n# Install if needed\n# install.packages(\"sf\")\n\nlibrary(sf)\n# Read a shapefile (replace with your own path)\n# shapefile &lt;- st_read(\"data/your_shapefile.shp\")\n# Print geometry summary\n# print(shapefile)"
  },
  {
    "objectID": "Introduction to R/packages.html#installing-packages",
    "href": "Introduction to R/packages.html#installing-packages",
    "title": "R Packages",
    "section": "",
    "text": "Before installing, ensure you have a CRAN mirror set. When you first invoke install.packages(), R will prompt you to choose a mirror. Select one geographically close to you for speed.\n\n# Install core packages from CRAN \ninstall.packages(\"tidyverse\") # data manipulation & visualization\ninstall.packages(\"vegan\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"readr\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"sf\", repos = \"https://cloud.r-project.org\") \ninstall.packages(\"lubridate\") # date-time utilities \ninstall.packages(\"stringr\") # string manipulation \ninstall.packages(\"purrr\")\n\n\ninstall.packages(\"pkg\") downloads source or binary from CRAN and installs it into your library (use getwd() if you’re unsure where your default library is located).\nTo specify a mirror programmatically, we use: repos = “https://cloud.r-project.org”"
  },
  {
    "objectID": "Introduction to R/packages.html#loading-packages",
    "href": "Introduction to R/packages.html#loading-packages",
    "title": "R Packages",
    "section": "",
    "text": "Once installed, load a package with library() or require():\n\nlibrary(tidyverse)   # dplyr, ggplot2, tidyr, readr, purrr, etc.\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(vegan)       # community ecology tools\n\nLoading required package: permute\nLoading required package: lattice\n\nlibrary(readr)       # fast data import\nlibrary(sf)          # spatial data handling\n\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(lubridate)   # date-time parsing\nlibrary(stringr)     # string processing\nlibrary(purrr)       # functional pipelines\n\n\nlibrary(pkg, quietly = TRUE) loads without startup messages.\nconflicts() lists any masking of functions from different packages."
  },
  {
    "objectID": "Introduction to R/packages.html#essential-package-ecosystems",
    "href": "Introduction to R/packages.html#essential-package-ecosystems",
    "title": "R Packages",
    "section": "",
    "text": "A coherent suite designed for data science by Hadley Wickham and team: - dplyr: Data manipulation grammar (filter(), select(), mutate(), summarise(), arrange()). - ggplot2: Grammar of graphics for plotting. - tidyr: Tools to reshape (pivot_longer, pivot_wider). - readr: High-performance data import (read_csv, read_delim).\n\n\n\n# Import a CSV via readr\n# df &lt;- read_csv(\"path/to/file.csv\")\n\n# Using built-in iris dataset as tibble\ndf &lt;- as_tibble(iris)\n\n# Chain operations with dplyr\ndf_summary &lt;- df %&gt;%\n  filter(Sepal.Length &gt; 5) %&gt;%\n  group_by(Species) %&gt;%\n  summarise(\n    mean_sep = mean(Sepal.Length),\n    sd_sep   = sd(Sepal.Length),\n    count    = n()\n  )\n\n# Display summary\ndf_summary\n\n# A tibble: 3 × 4\n  Species    mean_sep sd_sep count\n  &lt;fct&gt;         &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;\n1 setosa         5.31  0.223    22\n2 versicolor     6.00  0.467    47\n3 virginica      6.62  0.593    49\n\n# Create a scatter plot with ggplot2\nggplot(df, aes(x = Sepal.Length, y = Petal.Length, colour = Species)) +\n  geom_point(alpha = 0.7) +\n  labs(title = \"Sepal vs Petal Length by Species\")\n\n\n\n\n\n\n\n\n\n\n\n\nCommunity ecology and multivariate statistics: - diversity(x, index = \"shannon\"): Shannon diversity index. - metaMDS(x, distance = \"bray\"): Non-metric multidimensional scaling. - rda(x, y): Redundancy analysis (constrained ordination).\n\n\n\n# Load datasets\nlibrary(vegan)\ndata(dune)\ndata(dune.env)\n\n# Calculate Shannon diversity by site\ndiv_shannon &lt;- diversity(dune, index = \"shannon\")\nprint(div_shannon)\n\n       1        2        3        4        5        6        7        8 \n1.440482 2.252516 2.193749 2.426779 2.544421 2.345946 2.471733 2.434898 \n       9       10       11       12       13       14       15       16 \n2.493568 2.398613 2.106065 2.114495 2.099638 1.863680 1.979309 1.959795 \n      17       18       19       20 \n1.876274 2.079387 2.134024 2.048270 \n\n# Perform NMDS ordination\nnmds_res &lt;- metaMDS(dune, distance = \"bray\", k = 2)\n\nRun 0 stress 0.1192678 \nRun 1 stress 0.1192678 \n... Procrustes: rmse 2.760631e-05  max resid 7.918863e-05 \n... Similar to previous best\nRun 2 stress 0.1183186 \n... New best solution\n... Procrustes: rmse 0.02027082  max resid 0.06495998 \nRun 3 stress 0.1886532 \nRun 4 stress 0.1192678 \nRun 5 stress 0.1192678 \nRun 6 stress 0.192224 \nRun 7 stress 0.1192678 \nRun 8 stress 0.1809579 \nRun 9 stress 0.1192678 \nRun 10 stress 0.1192679 \nRun 11 stress 0.1192678 \nRun 12 stress 0.1192678 \nRun 13 stress 0.3770267 \nRun 14 stress 0.1192679 \nRun 15 stress 0.1808911 \nRun 16 stress 0.1183186 \n... Procrustes: rmse 8.295968e-06  max resid 2.447404e-05 \n... Similar to previous best\nRun 17 stress 0.1183186 \n... Procrustes: rmse 7.602898e-06  max resid 2.150183e-05 \n... Similar to previous best\nRun 18 stress 0.1192678 \nRun 19 stress 0.1192678 \nRun 20 stress 0.1812932 \n*** Best solution repeated 2 times\n\nplot(nmds_res, type = \"n\")\ntext(nmds_res, display = \"sites\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nsf: Simple features for spatial vector data. Use st_read() to import spatial files.\nlubridate: Simplifies date-time parsing (ymd(), hms()) and arithmetic.\nstringr: Consistent and user-friendly string manipulation (str_detect, str_replace).\npurrr: Functional programming tools to iterate (map, map_df).\n\n\n\n\n# Install if needed\n# install.packages(\"sf\")\n\nlibrary(sf)\n# Read a shapefile (replace with your own path)\n# shapefile &lt;- st_read(\"data/your_shapefile.shp\")\n# Print geometry summary\n# print(shapefile)"
  },
  {
    "objectID": "Introduction to R/r-basics.html",
    "href": "Introduction to R/r-basics.html",
    "title": "R Basics",
    "section": "",
    "text": "Welcome to your first R lecture. We will explore fundamental functions for descriptive statistics, discover R’s built-in datasets, and practise viewing data in RStudio.\n\n\nBase R provides the following core functions without loading any extra packages:\n\n# Sample numeric vector\ndata_vec &lt;- c(8.2, 5.4, 9.7, 6.1, 7.3, 8.9)\n\n# Compute descriptive statistics\nmean_val   &lt;- mean(data_vec)      # arithmetic mean\nsd_val     &lt;- sd(data_vec)        # standard deviation\nmedian_val &lt;- median(data_vec)    # median\nvar_val    &lt;- var(data_vec)       # variance\nquants     &lt;- quantile(data_vec, probs = c(0.25, 0.5, 0.75))  # quartiles\nrange_val  &lt;- range(data_vec)     # min and max\n\n# Display results\nmean_val\n\n[1] 7.6\n\nsd_val\n\n[1] 1.651666\n\nmedian_val\n\n[1] 7.75\n\nvar_val\n\n[1] 2.728\n\nquants\n\n  25%   50%   75% \n6.400 7.750 8.725 \n\nrange_val\n\n[1] 5.4 9.7\n\n\n\n\n\nmean(x): average of the elements in x.\nsd(x): sample standard deviation (denominator n−1).\nmedian(x): middle value of sorted x.\nvar(x): sample variance.\nquantile(x, probs): specified percentiles of x.\nrange(x): minimum and maximum values of x.\n\nUse ?function_name (e.g., ?mean) in the console to view documentation.\n\n\n\n\nR comes with many datasets. List them all with:\n\n# Show available datasets\ndata()\n\nBelow are commonly used examples:\n\n# Inspect iris dataset\ndata(iris)\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\nsummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n\nstr(iris)\n\n'data.frame':   150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n\n\n\n\n\n\n\nDataset\nDescription\nDimensions\n\n\n\n\niris\nEdgar Anderson’s measurements of iris flowers\n150 × 5\n\n\nmtcars\nMotor Trend car specifications and fuel consumption\n32 × 11\n\n\nairquality\nDaily air quality measurements in New York (1973)\n153 × 6\n\n\nCO2\nCarbon dioxide uptake in grass plants under different conditions\n84 × 5\n\n\nPlantGrowth\nResults of an experiment on plant weight under control and treat.\n30 × 2\n\n\n\n\n\n\n\nView( ): In the console or script, run:\n\nView(iris)\n\nThis opens a spreadsheet-like viewer.\nEnvironment Pane: Under the Environment tab, click a dataset name to inspect it interactively. Use the gear icon ⚙️ to show/hide columns.\n\nAlways check dimensions (dim(x)), variable names (names(x)), and types (class(x) / typeof(x)) before proceeding."
  },
  {
    "objectID": "Introduction to R/r-basics.html#computing-descriptive-statistics",
    "href": "Introduction to R/r-basics.html#computing-descriptive-statistics",
    "title": "R Basics",
    "section": "",
    "text": "Base R provides the following core functions without loading any extra packages:\n\n# Sample numeric vector\ndata_vec &lt;- c(8.2, 5.4, 9.7, 6.1, 7.3, 8.9)\n\n# Compute descriptive statistics\nmean_val   &lt;- mean(data_vec)      # arithmetic mean\nsd_val     &lt;- sd(data_vec)        # standard deviation\nmedian_val &lt;- median(data_vec)    # median\nvar_val    &lt;- var(data_vec)       # variance\nquants     &lt;- quantile(data_vec, probs = c(0.25, 0.5, 0.75))  # quartiles\nrange_val  &lt;- range(data_vec)     # min and max\n\n# Display results\nmean_val\n\n[1] 7.6\n\nsd_val\n\n[1] 1.651666\n\nmedian_val\n\n[1] 7.75\n\nvar_val\n\n[1] 2.728\n\nquants\n\n  25%   50%   75% \n6.400 7.750 8.725 \n\nrange_val\n\n[1] 5.4 9.7\n\n\n\n\n\nmean(x): average of the elements in x.\nsd(x): sample standard deviation (denominator n−1).\nmedian(x): middle value of sorted x.\nvar(x): sample variance.\nquantile(x, probs): specified percentiles of x.\nrange(x): minimum and maximum values of x.\n\nUse ?function_name (e.g., ?mean) in the console to view documentation."
  },
  {
    "objectID": "Introduction to R/r-basics.html#built-in-datasets-in-r",
    "href": "Introduction to R/r-basics.html#built-in-datasets-in-r",
    "title": "R Basics",
    "section": "",
    "text": "R comes with many datasets. List them all with:\n\n# Show available datasets\ndata()\n\nBelow are commonly used examples:\n\n# Inspect iris dataset\ndata(iris)\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\nsummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n\nstr(iris)\n\n'data.frame':   150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n\n\n\n\n\n\n\nDataset\nDescription\nDimensions\n\n\n\n\niris\nEdgar Anderson’s measurements of iris flowers\n150 × 5\n\n\nmtcars\nMotor Trend car specifications and fuel consumption\n32 × 11\n\n\nairquality\nDaily air quality measurements in New York (1973)\n153 × 6\n\n\nCO2\nCarbon dioxide uptake in grass plants under different conditions\n84 × 5\n\n\nPlantGrowth\nResults of an experiment on plant weight under control and treat.\n30 × 2"
  },
  {
    "objectID": "Introduction to R/r-basics.html#viewing-data-in-rstudio",
    "href": "Introduction to R/r-basics.html#viewing-data-in-rstudio",
    "title": "R Basics",
    "section": "",
    "text": "View( ): In the console or script, run:\n\nView(iris)\n\nThis opens a spreadsheet-like viewer.\nEnvironment Pane: Under the Environment tab, click a dataset name to inspect it interactively. Use the gear icon ⚙️ to show/hide columns.\n\nAlways check dimensions (dim(x)), variable names (names(x)), and types (class(x) / typeof(x)) before proceeding."
  }
]